{"version":3,"file":"vendors-node_modules_theia_core_lib_electron-browser_menu_electron-menu-module_js.js","mappings":"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","sources":["webpack:///../../node_modules/@theia/core/src/electron-browser/menu/electron-menu-style.css?../../node_modules/css-loader/dist/cjs.js","webpack:///../../node_modules/@theia/core/src/browser/menu/browser-context-menu-renderer.ts?","webpack:///../../node_modules/@theia/core/src/browser/menu/browser-menu-plugin.ts?","webpack:///../../node_modules/@theia/core/src/electron-browser/menu/electron-context-menu-renderer.ts?","webpack:///../../node_modules/@theia/core/src/electron-browser/menu/electron-main-menu-factory.ts?","webpack:///../../node_modules/@theia/core/src/electron-browser/menu/electron-menu-contribution.ts?","webpack:///../../node_modules/@theia/core/src/electron-browser/menu/electron-menu-module.ts?","webpack:///../../node_modules/@theia/core/src/electron-browser/window/electron-window-preferences.ts?","webpack:///../../node_modules/@theia/core/src/electron-browser/menu/electron-menu-style.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2021 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#theia-drag-panel {\\n  position: absolute;\\n  display: block;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: calc(100% - 4px);\\n  margin: 4px;\\n  -webkit-app-region: drag !important;\\n}\\n\\n#theia-top-panel > * {\\n  -webkit-app-region: no-drag;\\n}\\n\\n#theia-custom-title {\\n  position: absolute;\\n  left: 50%;\\n  transform: translate(-50%, 0px);\\n  line-height: 30px;\\n  flex: 0 1 auto;\\n  font-size: 12px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  margin-top: 2px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  zoom: 1;\\n  -webkit-app-region: drag !important;\\n}\\n\\n#theia-custom-title.relative {\\n  transform: none;\\n}\\n\\n#theia-custom-title.hidden {\\n  visibility: hidden;\\n}\\n\\n#window-controls {\\n  display: grid;\\n  grid-template-columns: repeat(3, 48px);\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  height: 100%;\\n}\\n\\n#window-controls .control-button {\\n  display: flex;\\n  line-height: 30px;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n#minimize-button {\\n  grid-column: 1;\\n}\\n\\n#maximize-button, #restore-button {\\n  grid-column: 2;\\n}\\n\\n#close-button {\\n  grid-column: 3;\\n}\\n\\n#window-controls .control-button {\\n  user-select: none;\\n}\\n\\n#window-controls .control-button:hover {\\n  background: rgba(50%, 50%, 50%, 0.2);\\n}\\n\\n#window-controls #close-button:hover {\\n  background: #E81123;\\n}\\n\\n#window-controls #close-button:hover:before {\\n  color: white;\\n}\\n\\nbody:not(.maximized) #restore-button {\\n  display: none;\\n}\\n\\nbody.maximized #maximize-button {\\n  display: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@theia/core/src/electron-browser/menu/electron-menu-style.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,kBAAkB;EAClB,cAAc;EACd,MAAM;EACN,OAAO;EACP,WAAW;EACX,wBAAwB;EACxB,WAAW;EACX,mCAAmC;AACrC;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,+BAA+B;EAC/B,iBAAiB;EACjB,cAAc;EACd,eAAe;EACf,gBAAgB;EAChB,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,OAAO;EACP,mCAAmC;AACrC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,YAAY;AACd;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2021 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#theia-drag-panel {\\n  position: absolute;\\n  display: block;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: calc(100% - 4px);\\n  margin: 4px;\\n  -webkit-app-region: drag !important;\\n}\\n\\n#theia-top-panel > * {\\n  -webkit-app-region: no-drag;\\n}\\n\\n#theia-custom-title {\\n  position: absolute;\\n  left: 50%;\\n  transform: translate(-50%, 0px);\\n  line-height: 30px;\\n  flex: 0 1 auto;\\n  font-size: 12px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  margin-top: 2px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  zoom: 1;\\n  -webkit-app-region: drag !important;\\n}\\n\\n#theia-custom-title.relative {\\n  transform: none;\\n}\\n\\n#theia-custom-title.hidden {\\n  visibility: hidden;\\n}\\n\\n#window-controls {\\n  display: grid;\\n  grid-template-columns: repeat(3, 48px);\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  height: 100%;\\n}\\n\\n#window-controls .control-button {\\n  display: flex;\\n  line-height: 30px;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n#minimize-button {\\n  grid-column: 1;\\n}\\n\\n#maximize-button, #restore-button {\\n  grid-column: 2;\\n}\\n\\n#close-button {\\n  grid-column: 3;\\n}\\n\\n#window-controls .control-button {\\n  user-select: none;\\n}\\n\\n#window-controls .control-button:hover {\\n  background: rgba(50%, 50%, 50%, 0.2);\\n}\\n\\n#window-controls #close-button:hover {\\n  background: #E81123;\\n}\\n\\n#window-controls #close-button:hover:before {\\n  color: white;\\n}\\n\\nbody:not(.maximized) #restore-button {\\n  display: none;\\n}\\n\\nbody.maximized #maximize-button {\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from 'inversify';\nimport { Menu } from '../widgets';\nimport { ContextMenuAccess, ContextMenuRenderer, coordinateFromAnchor, RenderContextMenuOptions } from '../context-menu-renderer';\nimport { BrowserMainMenuFactory } from './browser-menu-plugin';\n\nexport class BrowserContextMenuAccess extends ContextMenuAccess {\n    constructor(\n        public readonly menu: Menu\n    ) {\n        super(menu);\n    }\n}\n\n@injectable()\nexport class BrowserContextMenuRenderer extends ContextMenuRenderer {\n\n    constructor(@inject(BrowserMainMenuFactory) private menuFactory: BrowserMainMenuFactory) {\n        super();\n    }\n\n    protected doRender({ menuPath, anchor, args, onHide, context, contextKeyService }: RenderContextMenuOptions): ContextMenuAccess {\n        const contextMenu = this.menuFactory.createContextMenu(menuPath, args, context, contextKeyService);\n        const { x, y } = coordinateFromAnchor(anchor);\n        if (onHide) {\n            contextMenu.aboutToClose.connect(() => onHide!());\n        }\n        contextMenu.open(x, y);\n        return new BrowserContextMenuAccess(contextMenu);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from 'inversify';\nimport { MenuBar, Menu as MenuWidget, Widget } from '@phosphor/widgets';\nimport { CommandRegistry as PhosphorCommandRegistry } from '@phosphor/commands';\nimport {\n    CommandRegistry, environment, DisposableCollection, Disposable,\n    MenuModelRegistry, MAIN_MENU_BAR, MenuPath, MenuNode, MenuCommandExecutor, CompoundMenuNode, CompoundMenuNodeRole, CommandMenuNode\n} from '../../common';\nimport { KeybindingRegistry } from '../keybinding';\nimport { FrontendApplicationContribution, FrontendApplication } from '../frontend-application';\nimport { ContextKeyService, ContextMatcher } from '../context-key-service';\nimport { ContextMenuContext } from './context-menu-context';\nimport { waitForRevealed } from '../widgets';\nimport { ApplicationShell } from '../shell';\nimport { CorePreferences } from '../core-preferences';\nimport { PreferenceService } from '../preferences/preference-service';\n\nexport abstract class MenuBarWidget extends MenuBar {\n    abstract activateMenu(label: string, ...labels: string[]): Promise<MenuWidget>;\n    abstract triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem>;\n}\n\nexport interface BrowserMenuOptions extends MenuWidget.IOptions {\n    commands: MenuCommandRegistry,\n    context?: HTMLElement,\n    contextKeyService?: ContextMatcher;\n    rootMenuPath: MenuPath\n};\n\n@injectable()\nexport class BrowserMainMenuFactory implements MenuWidgetFactory {\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @inject(ContextMenuContext)\n    protected readonly context: ContextMenuContext;\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(MenuCommandExecutor)\n    protected readonly menuCommandExecutor: MenuCommandExecutor;\n\n    @inject(CorePreferences)\n    protected readonly corePreferences: CorePreferences;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(MenuModelRegistry)\n    protected readonly menuProvider: MenuModelRegistry;\n\n    createMenuBar(): MenuBarWidget {\n        const menuBar = new DynamicMenuBarWidget();\n        menuBar.id = 'theia:menubar';\n        this.corePreferences.ready.then(() => {\n            this.showMenuBar(menuBar, this.corePreferences.get('window.menuBarVisibility', 'classic'));\n        });\n        const preferenceListener = this.corePreferences.onPreferenceChanged(preference => {\n            if (preference.preferenceName === 'window.menuBarVisibility') {\n                this.showMenuBar(menuBar, preference.newValue);\n            }\n        });\n        const keybindingListener = this.keybindingRegistry.onKeybindingsChanged(() => {\n            const preference = this.corePreferences['window.menuBarVisibility'];\n            this.showMenuBar(menuBar, preference);\n        });\n        menuBar.disposed.connect(() => {\n            preferenceListener.dispose();\n            keybindingListener.dispose();\n        });\n        return menuBar;\n    }\n\n    protected showMenuBar(menuBar: DynamicMenuBarWidget, preference: string | undefined): void {\n        if (preference && ['classic', 'visible'].includes(preference)) {\n            menuBar.clearMenus();\n            this.fillMenuBar(menuBar);\n        } else {\n            menuBar.clearMenus();\n        }\n    }\n\n    protected fillMenuBar(menuBar: MenuBarWidget): void {\n        const menuModel = this.menuProvider.getMenu(MAIN_MENU_BAR);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel);\n        for (const menu of menuModel.children) {\n            if (CompoundMenuNode.is(menu)) {\n                const menuWidget = this.createMenuWidget(menu, { commands: menuCommandRegistry, rootMenuPath: MAIN_MENU_BAR });\n                menuBar.addMenu(menuWidget);\n            }\n        }\n    }\n\n    createContextMenu(path: MenuPath, args?: unknown[], context?: HTMLElement, contextKeyService?: ContextMatcher): MenuWidget {\n        const menuModel = this.menuProvider.getMenu(path);\n        const menuCommandRegistry = this.createMenuCommandRegistry(menuModel, args).snapshot(path);\n        const contextMenu = this.createMenuWidget(menuModel, { commands: menuCommandRegistry, context, rootMenuPath: path, contextKeyService });\n        return contextMenu;\n    }\n\n    createMenuWidget(menu: CompoundMenuNode, options: BrowserMenuOptions): DynamicMenuWidget {\n        return new DynamicMenuWidget(menu, options, this.services);\n    }\n\n    protected createMenuCommandRegistry(menu: CompoundMenuNode, args: unknown[] = []): MenuCommandRegistry {\n        const menuCommandRegistry = new MenuCommandRegistry(this.services);\n        this.registerMenu(menuCommandRegistry, menu, args);\n        return menuCommandRegistry;\n    }\n\n    protected registerMenu(menuCommandRegistry: MenuCommandRegistry, menu: MenuNode, args: unknown[]): void {\n        if (CompoundMenuNode.is(menu)) {\n            menu.children.forEach(child => this.registerMenu(menuCommandRegistry, child, args));\n        } else if (CommandMenuNode.is(menu)) {\n            menuCommandRegistry.registerActionMenu(menu, args);\n            if (CommandMenuNode.hasAltHandler(menu)) {\n                menuCommandRegistry.registerActionMenu(menu.altNode, args);\n            }\n\n        }\n    }\n\n    protected get services(): MenuServices {\n        return {\n            context: this.context,\n            contextKeyService: this.contextKeyService,\n            commandRegistry: this.commandRegistry,\n            keybindingRegistry: this.keybindingRegistry,\n            menuWidgetFactory: this,\n            commandExecutor: this.menuCommandExecutor,\n        };\n    }\n\n}\n\nexport class DynamicMenuBarWidget extends MenuBarWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor() {\n        super();\n        // HACK we need to hook in on private method _openChildMenu. Don't do this at home!\n        DynamicMenuBarWidget.prototype['_openChildMenu'] = () => {\n            if (this.activeMenu instanceof DynamicMenuWidget) {\n                // `childMenu` is `null` if we open the menu. For example, menu is not shown and you click on `Edit`.\n                // However, the `childMenu` is set, when `Edit` was already open and you move the mouse over `Select`.\n                // We want to save the focus object for the former case only.\n                if (!this.childMenu) {\n                    const { activeElement } = document;\n                    if (activeElement instanceof HTMLElement) {\n                        this.previousFocusedElement = activeElement;\n                    }\n                }\n                this.activeMenu.aboutToShow({ previousFocusedElement: this.previousFocusedElement });\n            }\n            super['_openChildMenu']();\n        };\n    }\n\n    async activateMenu(label: string, ...labels: string[]): Promise<MenuWidget> {\n        const menu = this.menus.find(m => m.title.label === label);\n        if (!menu) {\n            throw new Error(`could not find '${label}' menu`);\n        }\n        this.activeMenu = menu;\n        this.openActiveMenu();\n        await waitForRevealed(menu);\n\n        const menuPath = [label];\n\n        let current = menu;\n        for (const itemLabel of labels) {\n            const item = current.items.find(i => i.label === itemLabel);\n            if (!item || !item.submenu) {\n                throw new Error(`could not find '${label}' submenu in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n            }\n            current.activeItem = item;\n            current.triggerActiveItem();\n            current = item.submenu;\n            await waitForRevealed(current);\n        }\n        return current;\n    }\n\n    async triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem> {\n        if (!labels.length) {\n            throw new Error('menu item label is not specified');\n        }\n        const menuPath = [label, ...labels.slice(0, labels.length - 1)];\n        const menu = await this.activateMenu(menuPath[0], ...menuPath.slice(1));\n        const item = menu.items.find(i => i.label === labels[labels.length - 1]);\n        if (!item) {\n            throw new Error(`could not find '${label}' item in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n        }\n        menu.activeItem = item;\n        menu.triggerActiveItem();\n        return item;\n    }\n\n}\n\nexport class MenuServices {\n    readonly commandRegistry: CommandRegistry;\n    readonly keybindingRegistry: KeybindingRegistry;\n    readonly contextKeyService: ContextKeyService;\n    readonly context: ContextMenuContext;\n    readonly menuWidgetFactory: MenuWidgetFactory;\n    readonly commandExecutor: MenuCommandExecutor;\n}\n\nexport interface MenuWidgetFactory {\n    createMenuWidget(menu: MenuNode & Required<Pick<MenuNode, 'children'>>, options: BrowserMenuOptions): MenuWidget;\n}\n\n/**\n * A menu widget that would recompute its items on update.\n */\nexport class DynamicMenuWidget extends MenuWidget {\n\n    /**\n     * We want to restore the focus after the menu closes.\n     */\n    protected previousFocusedElement: HTMLElement | undefined;\n\n    constructor(\n        protected menu: CompoundMenuNode,\n        protected options: BrowserMenuOptions,\n        protected services: MenuServices\n    ) {\n        super(options);\n        if (menu.label) {\n            this.title.label = menu.label;\n        }\n        if (menu.icon) {\n            this.title.iconClass = menu.icon;\n        }\n        this.updateSubMenus(this, this.menu, this.options.commands);\n    }\n\n    public aboutToShow({ previousFocusedElement }: { previousFocusedElement: HTMLElement | undefined }): void {\n        this.preserveFocusedElement(previousFocusedElement);\n        this.clearItems();\n        this.runWithPreservedFocusContext(() => {\n            this.options.commands.snapshot(this.options.rootMenuPath);\n            this.updateSubMenus(this, this.menu, this.options.commands);\n        });\n    }\n\n    public override open(x: number, y: number, options?: MenuWidget.IOpenOptions): void {\n        const cb = () => {\n            this.restoreFocusedElement();\n            this.aboutToClose.disconnect(cb);\n        };\n        this.aboutToClose.connect(cb);\n        this.preserveFocusedElement();\n        super.open(x, y, options);\n    }\n\n    protected updateSubMenus(parent: MenuWidget, menu: CompoundMenuNode, commands: MenuCommandRegistry): void {\n        const items = this.buildSubMenus([], menu, commands);\n        while (items[items.length - 1]?.type === 'separator') {\n            items.pop();\n        }\n        for (const item of items) {\n            parent.addItem(item);\n        }\n    }\n\n    protected buildSubMenus(parentItems: MenuWidget.IItemOptions[], menu: MenuNode, commands: MenuCommandRegistry): MenuWidget.IItemOptions[] {\n        if (CompoundMenuNode.is(menu)\n            && menu.children.length\n            && this.undefinedOrMatch(this.options.contextKeyService ?? this.services.contextKeyService, menu.when, this.options.context)) {\n            const role = menu === this.menu ? CompoundMenuNodeRole.Group : CompoundMenuNode.getRole(menu);\n            if (role === CompoundMenuNodeRole.Submenu) {\n                const submenu = this.services.menuWidgetFactory.createMenuWidget(menu, this.options);\n                if (submenu.items.length > 0) {\n                    parentItems.push({ type: 'submenu', submenu });\n                }\n            } else if (role === CompoundMenuNodeRole.Group && menu.id !== 'inline') {\n                const children = CompoundMenuNode.getFlatChildren(menu.children);\n                const myItems: MenuWidget.IItemOptions[] = [];\n                children.forEach(child => this.buildSubMenus(myItems, child, commands));\n                if (myItems.length) {\n                    if (parentItems.length && parentItems[parentItems.length - 1].type !== 'separator') {\n                        parentItems.push({ type: 'separator' });\n                    }\n                    parentItems.push(...myItems);\n                    parentItems.push({ type: 'separator' });\n                }\n            }\n        } else if (menu.command) {\n            const node = menu.altNode && this.services.context.altPressed ? menu.altNode : (menu as MenuNode & CommandMenuNode);\n            if (commands.isVisible(node.command) && this.undefinedOrMatch(this.options.contextKeyService ?? this.services.contextKeyService, node.when, this.options.context)) {\n                parentItems.push({\n                    command: node.command,\n                    type: 'command'\n                });\n            }\n        }\n        return parentItems;\n    }\n\n    protected undefinedOrMatch(contextKeyService: ContextMatcher, expression?: string, context?: HTMLElement): boolean {\n        if (expression) { return contextKeyService.match(expression, context); }\n        return true;\n    }\n\n    protected preserveFocusedElement(previousFocusedElement: Element | null = document.activeElement): boolean {\n        if (!this.previousFocusedElement && previousFocusedElement instanceof HTMLElement) {\n            this.previousFocusedElement = previousFocusedElement;\n            return true;\n        }\n        return false;\n    }\n\n    protected restoreFocusedElement(): boolean {\n        if (this.previousFocusedElement) {\n            this.previousFocusedElement.focus({ preventScroll: true });\n            this.previousFocusedElement = undefined;\n            return true;\n        }\n        return false;\n    }\n\n    protected runWithPreservedFocusContext(what: () => void): void {\n        let focusToRestore: HTMLElement | undefined = undefined;\n        const { activeElement } = document;\n        if (this.previousFocusedElement && activeElement instanceof HTMLElement && this.previousFocusedElement !== activeElement) {\n            focusToRestore = activeElement;\n            this.previousFocusedElement.focus({ preventScroll: true });\n        }\n        try {\n            what();\n        } finally {\n            if (focusToRestore) {\n                focusToRestore.focus({ preventScroll: true });\n            }\n        }\n    }\n\n}\n\n@injectable()\nexport class BrowserMenuBarContribution implements FrontendApplicationContribution {\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    constructor(\n        @inject(BrowserMainMenuFactory) protected readonly factory: BrowserMainMenuFactory\n    ) { }\n\n    onStart(app: FrontendApplication): void {\n        this.appendMenu(app.shell);\n    }\n\n    get menuBar(): MenuBarWidget | undefined {\n        return this.shell.topPanel.widgets.find(w => w instanceof MenuBarWidget) as MenuBarWidget | undefined;\n    }\n\n    protected appendMenu(shell: ApplicationShell): void {\n        const logo = this.createLogo();\n        shell.addWidget(logo, { area: 'top' });\n        const menu = this.factory.createMenuBar();\n        shell.addWidget(menu, { area: 'top' });\n        // Hiding the menu is only necessary in electron\n        // In the browser we hide the whole top panel\n        if (environment.electron.is()) {\n            this.preferenceService.ready.then(() => {\n                menu.setHidden(['compact', 'hidden'].includes(this.preferenceService.get('window.menuBarVisibility', '')));\n            });\n            this.preferenceService.onPreferenceChanged(change => {\n                if (change.preferenceName === 'window.menuBarVisibility') {\n                    menu.setHidden(['compact', 'hidden'].includes(change.newValue));\n                }\n            });\n        }\n    }\n\n    protected createLogo(): Widget {\n        const logo = new Widget();\n        logo.id = 'theia:icon';\n        logo.addClass('theia-icon');\n        return logo;\n    }\n}\n\n/**\n * Stores Theia-specific action menu nodes instead of PhosphorJS commands with their handlers.\n */\nexport class MenuCommandRegistry extends PhosphorCommandRegistry {\n\n    protected actions = new Map<string, [MenuNode & CommandMenuNode, unknown[]]>();\n    protected toDispose = new DisposableCollection();\n\n    constructor(protected services: MenuServices) {\n        super();\n    }\n\n    registerActionMenu(menu: MenuNode & CommandMenuNode, args: unknown[]): void {\n        const { commandRegistry } = this.services;\n        const command = commandRegistry.getCommand(menu.command);\n        if (!command) {\n            return;\n        }\n        const { id } = command;\n        if (this.actions.has(id)) {\n            return;\n        }\n        this.actions.set(id, [menu, args]);\n    }\n\n    snapshot(menuPath: MenuPath): this {\n        this.toDispose.dispose();\n        for (const [menu, args] of this.actions.values()) {\n            this.toDispose.push(this.registerCommand(menu, args, menuPath));\n        }\n        return this;\n    }\n\n    protected registerCommand(menu: MenuNode & CommandMenuNode, args: unknown[], menuPath: MenuPath): Disposable {\n        const { commandRegistry, keybindingRegistry, commandExecutor } = this.services;\n        const command = commandRegistry.getCommand(menu.command);\n        if (!command) {\n            return Disposable.NULL;\n        }\n        const { id } = command;\n        if (this.hasCommand(id)) {\n            // several menu items can be registered for the same command in different contexts\n            return Disposable.NULL;\n        }\n\n        // We freeze the `isEnabled`, `isVisible`, and `isToggled` states so they won't change.\n        const enabled = commandExecutor.isEnabled(menuPath, id, ...args);\n        const visible = commandExecutor.isVisible(menuPath, id, ...args);\n        const toggled = commandExecutor.isToggled(menuPath, id, ...args);\n        const unregisterCommand = this.addCommand(id, {\n            execute: () => commandExecutor.executeCommand(menuPath, id, ...args),\n            label: menu.label,\n            icon: menu.icon,\n            isEnabled: () => enabled,\n            isVisible: () => visible,\n            isToggled: () => toggled\n        });\n\n        const bindings = keybindingRegistry.getKeybindingsForCommand(id);\n        // Only consider the first keybinding.\n        if (bindings.length) {\n            const binding = bindings[0];\n            const keys = keybindingRegistry.acceleratorFor(binding, ' ', true);\n            this.addKeyBinding({\n                command: id,\n                keys,\n                selector: '.p-Widget' // We have the PhosphorJS dependency anyway.\n            });\n        }\n        return Disposable.create(() => unregisterCommand.dispose());\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport {\n    ContextMenuRenderer, RenderContextMenuOptions, ContextMenuAccess, FrontendApplicationContribution, CommonCommands, coordinateFromAnchor, PreferenceService\n} from '../../browser';\nimport { ElectronMainMenuFactory } from './electron-main-menu-factory';\nimport { ContextMenuContext } from '../../browser/menu/context-menu-context';\nimport { MenuPath, MenuContribution, MenuModelRegistry } from '../../common';\nimport { BrowserContextMenuRenderer } from '../../browser/menu/browser-context-menu-renderer';\n\nexport class ElectronContextMenuAccess extends ContextMenuAccess {\n    constructor(readonly menuHandle: Promise<number>) {\n        super({\n            dispose: () => menuHandle.then(handle => window.electronTheiaCore.closePopup(handle))\n        });\n    }\n}\n\nexport namespace ElectronTextInputContextMenu {\n    export const MENU_PATH: MenuPath = ['electron_text_input'];\n    export const UNDO_REDO_EDIT_GROUP = [...MENU_PATH, '0_undo_redo_group'];\n    export const EDIT_GROUP = [...MENU_PATH, '1_edit_group'];\n    export const SELECT_GROUP = [...MENU_PATH, '2_select_group'];\n}\n\n@injectable()\nexport class ElectronTextInputContextMenuContribution implements FrontendApplicationContribution, MenuContribution {\n\n    @inject(ContextMenuRenderer)\n    protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    onStart(): void {\n        window.document.addEventListener('contextmenu', event => {\n            if (event.target instanceof HTMLElement) {\n                const target = <HTMLElement>event.target;\n                if (target.nodeName && (target.nodeName.toLowerCase() === 'input' || target.nodeName.toLowerCase() === 'textarea')) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this.contextMenuRenderer.render({\n                        anchor: event,\n                        menuPath: ElectronTextInputContextMenu.MENU_PATH,\n                        onHide: () => target.focus()\n                    });\n                }\n            }\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(ElectronTextInputContextMenu.UNDO_REDO_EDIT_GROUP, { commandId: CommonCommands.UNDO.id });\n        registry.registerMenuAction(ElectronTextInputContextMenu.UNDO_REDO_EDIT_GROUP, { commandId: CommonCommands.REDO.id });\n        registry.registerMenuAction(ElectronTextInputContextMenu.EDIT_GROUP, { commandId: CommonCommands.CUT.id });\n        registry.registerMenuAction(ElectronTextInputContextMenu.EDIT_GROUP, { commandId: CommonCommands.COPY.id });\n        registry.registerMenuAction(ElectronTextInputContextMenu.EDIT_GROUP, { commandId: CommonCommands.PASTE.id });\n        registry.registerMenuAction(ElectronTextInputContextMenu.SELECT_GROUP, { commandId: CommonCommands.SELECT_ALL.id });\n    }\n\n}\n\n@injectable()\nexport class ElectronContextMenuRenderer extends BrowserContextMenuRenderer {\n\n    @inject(ContextMenuContext)\n    protected readonly context: ContextMenuContext;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    protected useNativeStyle: boolean = true;\n\n    constructor(@inject(ElectronMainMenuFactory) private electronMenuFactory: ElectronMainMenuFactory) {\n        super(electronMenuFactory);\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.useNativeStyle = await window.electronTheiaCore.getTitleBarStyleAtStartup() === 'native';\n    }\n\n    protected override doRender(options: RenderContextMenuOptions): ContextMenuAccess {\n        if (this.useNativeStyle) {\n            const { menuPath, anchor, args, onHide, context, contextKeyService } = options;\n            const menu = this.electronMenuFactory.createElectronContextMenu(menuPath, args, context, contextKeyService);\n            const { x, y } = coordinateFromAnchor(anchor);\n\n            const menuHandle = window.electronTheiaCore.popup(menu, x, y, () => {\n                if (onHide) {\n                    onHide();\n                }\n            });\n            // native context menu stops the event loop, so there is no keyboard events\n            this.context.resetAltPressed();\n            return new ElectronContextMenuAccess(menuHandle);\n        } else {\n            return super.doRender(options);\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { isOSX, MAIN_MENU_BAR, MenuPath, MenuNode, CommandMenuNode, CompoundMenuNode, CompoundMenuNodeRole } from '../../common';\nimport { Keybinding } from '../../common/keybinding';\nimport { PreferenceService, CommonCommands } from '../../browser';\nimport debounce = require('lodash.debounce');\nimport { MAXIMIZED_CLASS } from '../../browser/shell/theia-dock-panel';\nimport { BrowserMainMenuFactory } from '../../browser/menu/browser-menu-plugin';\nimport { ContextMatcher } from '../../browser/context-key-service';\nimport { MenuDto, MenuRole } from '../../electron-common/electron-api';\n\n/**\n * Representation of possible electron menu options.\n */\nexport interface ElectronMenuOptions {\n    /**\n     * Controls whether to render disabled menu items.\n     * Defaults to `true`.\n     */\n    readonly showDisabled?: boolean;\n    /**\n     * A DOM context to use when evaluating any `when` clauses\n     * of menu items registered for this item.\n     */\n    context?: HTMLElement;\n    /**\n     * A context key service to use when evaluating any `when` clauses.\n     * If none is provided, the global context will be used.\n     */\n    contextKeyService?: ContextMatcher;\n    /**\n     * The root menu path for which the menu is being built.\n     */\n    rootMenuPath: MenuPath\n}\n\n/**\n * Define the action of the menu item, when specified the `click` property will\n * be ignored. See [roles](https://www.electronjs.org/docs/api/menu-item#roles).\n */\nexport type ElectronMenuItemRole = ('undo' | 'redo' | 'cut' | 'copy' | 'paste' |\n    'pasteAndMatchStyle' | 'delete' | 'selectAll' | 'reload' | 'forceReload' |\n    'toggleDevTools' | 'resetZoom' | 'zoomIn' | 'zoomOut' | 'togglefullscreen' |\n    'window' | 'minimize' | 'close' | 'help' | 'about' |\n    'services' | 'hide' | 'hideOthers' | 'unhide' | 'quit' |\n    'startSpeaking' | 'stopSpeaking' | 'zoom' | 'front' | 'appMenu' |\n    'fileMenu' | 'editMenu' | 'viewMenu' | 'recentDocuments' | 'toggleTabBar' |\n    'selectNextTab' | 'selectPreviousTab' | 'mergeAllWindows' | 'clearRecentDocuments' |\n    'moveTabToNewWindow' | 'windowMenu');\n\n@injectable()\nexport class ElectronMainMenuFactory extends BrowserMainMenuFactory {\n\n    protected _menu?: MenuDto[];\n    protected _toggledCommands: Set<string> = new Set();\n\n    @inject(PreferenceService)\n    protected preferencesService: PreferenceService;\n\n    @postConstruct()\n    postConstruct(): void {\n        this.preferencesService.onPreferenceChanged(\n            debounce(e => {\n                if (e.preferenceName === 'window.menuBarVisibility') {\n                    this.setMenuBar();\n                }\n                if (this._menu) {\n                    for (const cmd of this._toggledCommands) {\n                        const menuItem = this.findMenuById(this._menu, cmd);\n                        if (menuItem) {\n                            menuItem.checked = this.commandRegistry.isToggled(cmd);\n                        }\n                    }\n                    window.electronTheiaCore.setMenu(this._menu);\n                }\n            }, 10)\n        );\n        this.keybindingRegistry.onKeybindingsChanged(() => {\n            this.setMenuBar();\n        });\n    }\n\n    async setMenuBar(): Promise<void> {\n        await this.preferencesService.ready;\n        const createdMenuBar = this.createElectronMenuBar();\n        window.electronTheiaCore.setMenu(createdMenuBar);\n    }\n\n    createElectronMenuBar(): MenuDto[] | undefined {\n        const preference = this.preferencesService.get<string>('window.menuBarVisibility') || 'classic';\n        const maxWidget = document.getElementsByClassName(MAXIMIZED_CLASS);\n        if (preference === 'visible' || (preference === 'classic' && maxWidget.length === 0)) {\n            const menuModel = this.menuProvider.getMenu(MAIN_MENU_BAR);\n            this._menu = this.fillMenuTemplate([], menuModel, [], { rootMenuPath: MAIN_MENU_BAR });\n            if (isOSX) {\n                this._menu.unshift(this.createOSXMenu());\n            }\n            return this._menu;\n        }\n        this._menu = undefined;\n        // eslint-disable-next-line no-null/no-null\n        return undefined;\n    }\n\n    createElectronContextMenu(menuPath: MenuPath, args?: any[], context?: HTMLElement, contextKeyService?: ContextMatcher): MenuDto[] {\n        const menuModel = this.menuProvider.getMenu(menuPath);\n        return this.fillMenuTemplate([], menuModel, args, { showDisabled: false, context, rootMenuPath: menuPath, contextKeyService });\n    }\n\n    protected fillMenuTemplate(parentItems: MenuDto[],\n        menu: MenuNode,\n        args: unknown[] = [],\n        options: ElectronMenuOptions\n    ): MenuDto[] {\n        const showDisabled = options?.showDisabled !== false;\n\n        if (CompoundMenuNode.is(menu) && menu.children.length && this.undefinedOrMatch(options.contextKeyService ?? this.contextKeyService, menu.when, options.context)) {\n            const role = CompoundMenuNode.getRole(menu);\n            if (role === CompoundMenuNodeRole.Group && menu.id === 'inline') {\n                return parentItems;\n            }\n            const children = CompoundMenuNode.getFlatChildren(menu.children);\n            const myItems: MenuDto[] = [];\n            children.forEach(child => this.fillMenuTemplate(myItems, child, args, options));\n            if (myItems.length === 0) {\n                return parentItems;\n            }\n            if (role === CompoundMenuNodeRole.Submenu) {\n                parentItems.push({ label: menu.label, submenu: myItems });\n            } else if (role === CompoundMenuNodeRole.Group && menu.id !== 'inline') {\n                if (parentItems.length && parentItems[parentItems.length - 1].type !== 'separator') {\n                    parentItems.push({ type: 'separator' });\n                }\n                parentItems.push(...myItems);\n                parentItems.push({ type: 'separator' });\n            }\n        } else if (menu.command) {\n            const node = menu.altNode && this.context.altPressed ? menu.altNode : (menu as MenuNode & CommandMenuNode);\n            const commandId = node.command;\n\n            // That is only a sanity check at application startup.\n            if (!this.commandRegistry.getCommand(commandId)) {\n                console.debug(`Skipping menu item with missing command: \"${commandId}\".`);\n                return parentItems;\n            }\n\n            if (\n                !this.menuCommandExecutor.isVisible(options.rootMenuPath, commandId, ...args)\n                || !this.undefinedOrMatch(options.contextKeyService ?? this.contextKeyService, node.when, options.context)) {\n                return parentItems;\n            }\n\n            // We should omit rendering context-menu items which are disabled.\n            if (!showDisabled && !this.menuCommandExecutor.isEnabled(options.rootMenuPath, commandId, ...args)) {\n                return parentItems;\n            }\n\n            const bindings = this.keybindingRegistry.getKeybindingsForCommand(commandId);\n\n            const accelerator = bindings[0] && this.acceleratorFor(bindings[0]);\n\n            const menuItem: MenuDto = {\n                id: node.id,\n                label: node.label,\n                type: this.commandRegistry.getToggledHandler(commandId, ...args) ? 'checkbox' : 'normal',\n                checked: this.commandRegistry.isToggled(commandId, ...args),\n                enabled: true, // https://github.com/eclipse-theia/theia/issues/446\n                visible: true,\n                accelerator,\n                execute: () => this.execute(commandId, args, options.rootMenuPath)\n            };\n\n            if (isOSX) {\n                const role = this.roleFor(node.id);\n                if (role) {\n                    menuItem.role = role;\n                    delete menuItem.execute;\n                }\n            }\n            parentItems.push(menuItem);\n\n            if (this.commandRegistry.getToggledHandler(commandId, ...args)) {\n                this._toggledCommands.add(commandId);\n            }\n        }\n        return parentItems;\n    }\n\n    protected undefinedOrMatch(contextKeyService: ContextMatcher, expression?: string, context?: HTMLElement): boolean {\n        if (expression) {\n            return contextKeyService.match(expression, context);\n        }\n        return true;\n    }\n\n    /**\n     * Return a user visible representation of a keybinding.\n     */\n    protected acceleratorFor(keybinding: Keybinding): string {\n        const bindingKeySequence = this.keybindingRegistry.resolveKeybinding(keybinding);\n        // FIXME see https://github.com/electron/electron/issues/11740\n        // Key Sequences can't be represented properly in the electron menu.\n        //\n        // We can do what VS Code does, and append the chords as a suffix to the menu label.\n        // https://github.com/eclipse-theia/theia/issues/1199#issuecomment-430909480\n        if (bindingKeySequence.length > 1) {\n            return '';\n        }\n\n        const keyCode = bindingKeySequence[0];\n        return this.keybindingRegistry.acceleratorForKeyCode(keyCode, '+', true);\n    }\n\n    protected roleFor(id: string): MenuRole | undefined {\n        let role: MenuRole | undefined;\n        switch (id) {\n            case CommonCommands.UNDO.id:\n                role = 'undo';\n                break;\n            case CommonCommands.REDO.id:\n                role = 'redo';\n                break;\n            case CommonCommands.CUT.id:\n                role = 'cut';\n                break;\n            case CommonCommands.COPY.id:\n                role = 'copy';\n                break;\n            case CommonCommands.PASTE.id:\n                role = 'paste';\n                break;\n            case CommonCommands.SELECT_ALL.id:\n                role = 'selectAll';\n                break;\n            default:\n                break;\n        }\n        return role;\n    }\n\n    protected async execute(cmd: string, args: any[], menuPath: MenuPath): Promise<void> {\n        try {\n            // This is workaround for https://github.com/eclipse-theia/theia/issues/446.\n            // Electron menus do not update based on the `isEnabled`, `isVisible` property of the command.\n            // We need to check if we can execute it.\n            if (this.menuCommandExecutor.isEnabled(menuPath, cmd, ...args)) {\n                await this.menuCommandExecutor.executeCommand(menuPath, cmd, ...args);\n                if (this._menu && this.menuCommandExecutor.isVisible(menuPath, cmd, ...args)) {\n                    const item = this.findMenuById(this._menu, cmd);\n                    if (item) {\n                        item.checked = this.menuCommandExecutor.isToggled(menuPath, cmd, ...args);\n                        window.electronTheiaCore.setMenu(this._menu);\n                    }\n                }\n            }\n        } catch {\n            // no-op\n        }\n    }\n    findMenuById(items: MenuDto[], id: string): MenuDto | undefined {\n        for (const item of items) {\n            if (item.id === id) {\n                return item;\n            }\n            if (item.submenu) {\n                const found = this.findMenuById(item.submenu, id);\n                if (found) {\n                    return found;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected createOSXMenu(): MenuDto {\n        return {\n            label: 'Theia',\n            submenu: [\n                {\n                    role: 'about'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'services',\n                    submenu: []\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'hide'\n                },\n                {\n                    role: 'hideOthers'\n                },\n                {\n                    role: 'unhide'\n                },\n                {\n                    type: 'separator'\n                },\n                {\n                    role: 'quit'\n                }\n            ]\n        };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Command, CommandContribution, CommandRegistry, isOSX, isWindows, MenuModelRegistry, MenuContribution, Disposable, nls } from '../../common';\nimport {\n    codicon, ConfirmDialog, KeybindingContribution, KeybindingRegistry, PreferenceScope, Widget,\n    FrontendApplication, FrontendApplicationContribution, CommonMenus, CommonCommands, Dialog, Message, ApplicationShell,\n} from '../../browser';\nimport { ElectronMainMenuFactory } from './electron-main-menu-factory';\nimport { FrontendApplicationStateService, FrontendApplicationState } from '../../browser/frontend-application-state';\nimport { FrontendApplicationConfigProvider } from '../../browser/frontend-application-config-provider';\nimport { ZoomLevel } from '../window/electron-window-preferences';\nimport { BrowserMenuBarContribution } from '../../browser/menu/browser-menu-plugin';\nimport { WindowService } from '../../browser/window/window-service';\nimport { WindowTitleService } from '../../browser/window/window-title-service';\n\nimport '../../../src/electron-browser/menu/electron-menu-style.css';\nimport { MenuDto } from '../../electron-common/electron-api';\n\nexport namespace ElectronCommands {\n    export const TOGGLE_DEVELOPER_TOOLS = Command.toDefaultLocalizedCommand({\n        id: 'theia.toggleDevTools',\n        label: 'Toggle Developer Tools'\n    });\n    export const RELOAD = Command.toDefaultLocalizedCommand({\n        id: 'view.reload',\n        label: 'Reload Window'\n    });\n    export const ZOOM_IN = Command.toDefaultLocalizedCommand({\n        id: 'view.zoomIn',\n        label: 'Zoom In'\n    });\n    export const ZOOM_OUT = Command.toDefaultLocalizedCommand({\n        id: 'view.zoomOut',\n        label: 'Zoom Out'\n    });\n    export const RESET_ZOOM = Command.toDefaultLocalizedCommand({\n        id: 'view.resetZoom',\n        label: 'Reset Zoom'\n    });\n    export const CLOSE_WINDOW = Command.toDefaultLocalizedCommand({\n        id: 'close.window',\n        label: 'Close Window'\n    });\n    export const TOGGLE_FULL_SCREEN = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.toggleFullScreen',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Full Screen'\n    });\n}\n\nexport namespace ElectronMenus {\n    export const VIEW_WINDOW = [...CommonMenus.VIEW, 'window'];\n    export const VIEW_ZOOM = [...CommonMenus.VIEW_APPEARANCE_SUBMENU, '4_appearance_submenu_zoom'];\n}\n\nexport namespace ElectronMenus {\n    export const HELP_TOGGLE = [...CommonMenus.HELP, 'z_toggle'];\n}\n\nexport namespace ElectronMenus {\n    export const FILE_CLOSE = [...CommonMenus.FILE_CLOSE, 'window-close'];\n}\n\nexport const CustomTitleWidgetFactory = Symbol('CustomTitleWidgetFactory');\nexport type CustomTitleWidgetFactory = () => Widget | undefined;\n\n@injectable()\nexport class ElectronMenuContribution extends BrowserMenuBarContribution implements FrontendApplicationContribution, CommandContribution, MenuContribution, KeybindingContribution {\n\n    @inject(FrontendApplicationStateService)\n    protected readonly stateService: FrontendApplicationStateService;\n\n    @inject(WindowService)\n    protected readonly windowService: WindowService;\n\n    @inject(CustomTitleWidgetFactory)\n    protected readonly customTitleWidgetFactory: CustomTitleWidgetFactory;\n\n    protected titleBarStyleChangeFlag = false;\n    protected titleBarStyle?: string;\n\n    constructor(\n        @inject(ElectronMainMenuFactory) protected override readonly factory: ElectronMainMenuFactory\n    ) {\n        super(factory);\n    }\n\n    override onStart(app: FrontendApplication): void {\n        this.handleTitleBarStyling(app);\n        if (isOSX) {\n            this.attachWindowFocusListener(app);\n        }\n        // Make sure the application menu is complete, once the frontend application is ready.\n        // https://github.com/theia-ide/theia/issues/5100\n        let onStateChange: Disposable | undefined = undefined;\n        const stateServiceListener = (state: FrontendApplicationState) => {\n            if (state === 'closing_window') {\n                if (!!onStateChange) {\n                    onStateChange.dispose();\n                }\n            }\n        };\n        onStateChange = this.stateService.onStateChanged(stateServiceListener);\n        this.shell.mainPanel.onDidToggleMaximized(() => {\n            this.handleToggleMaximized();\n        });\n        this.shell.bottomPanel.onDidToggleMaximized(() => {\n            this.handleToggleMaximized();\n        });\n        this.attachMenuBarVisibilityListener();\n    }\n\n    protected attachWindowFocusListener(app: FrontendApplication): void {\n        // OSX: Recreate the menus when changing windows.\n        // OSX only has one menu bar for all windows, so we need to swap\n        // between them as the user switches windows.\n        const disposeHandler = window.electronTheiaCore.onWindowEvent('focus', () => {\n            this.setMenu(app);\n        });\n        window.addEventListener('unload', () => disposeHandler.dispose());\n    }\n\n    protected attachMenuBarVisibilityListener(): void {\n        this.preferenceService.onPreferenceChanged(e => {\n            if (e.preferenceName === 'window.menuBarVisibility') {\n                this.handleFullScreen(e.newValue);\n            }\n        });\n    }\n\n    handleTitleBarStyling(app: FrontendApplication): void {\n        this.hideTopPanel(app);\n        window.electronTheiaCore.getTitleBarStyleAtStartup().then(style => {\n            this.titleBarStyle = style;\n            this.setMenu(app);\n            this.preferenceService.ready.then(() => {\n                this.preferenceService.set('window.titleBarStyle', this.titleBarStyle, PreferenceScope.User);\n            });\n        });\n\n        this.preferenceService.ready.then(() => {\n            window.electronTheiaCore.setMenuBarVisible(['classic', 'visible'].includes(this.preferenceService.get('window.menuBarVisibility', 'classic')));\n        });\n\n        this.preferenceService.onPreferenceChanged(change => {\n            if (change.preferenceName === 'window.titleBarStyle') {\n                if (this.titleBarStyleChangeFlag && this.titleBarStyle !== change.newValue) {\n                    window.electronTheiaCore.setTitleBarStyle(change.newValue);\n                    this.handleRequiredRestart();\n                }\n                this.titleBarStyleChangeFlag = true;\n            }\n        });\n    }\n\n    handleToggleMaximized(): void {\n        const preference = this.preferenceService.get('window.menuBarVisibility');\n        if (preference === 'classic') {\n            this.factory.setMenuBar();\n        }\n    }\n\n    /**\n     * Hides the `theia-top-panel` depending on the selected `titleBarStyle`.\n     * The `theia-top-panel` is used as the container of the main, application menu-bar for the\n     * browser. Native Electron has it's own.\n     * By default, this method is called on application `onStart`.\n     */\n    protected hideTopPanel(app: FrontendApplication): void {\n        const itr = app.shell.children();\n        let child = itr.next();\n        while (child) {\n            // Top panel for the menu contribution is not required for native Electron title bar.\n            if (child.id === 'theia-top-panel') {\n                child.setHidden(this.titleBarStyle !== 'custom');\n                break;\n            } else {\n                child = itr.next();\n            }\n        }\n    }\n\n    protected setMenu(app: FrontendApplication, electronMenu: MenuDto[] | undefined = this.factory.createElectronMenuBar()): void {\n        if (!isOSX) {\n            this.hideTopPanel(app);\n            if (this.titleBarStyle === 'custom' && !this.menuBar) {\n                this.createCustomTitleBar(app);\n                return;\n            }\n        }\n        window.electronTheiaCore.setMenu(electronMenu);\n    }\n\n    protected createCustomTitleBar(app: FrontendApplication): void {\n        const dragPanel = new Widget();\n        dragPanel.id = 'theia-drag-panel';\n        app.shell.addWidget(dragPanel, { area: 'top' });\n        this.appendMenu(app.shell);\n        this.createCustomTitleWidget(app);\n        const controls = document.createElement('div');\n        controls.id = 'window-controls';\n        controls.append(\n            this.createControlButton('minimize', () => window.electronTheiaCore.minimize()),\n            this.createControlButton('maximize', () => window.electronTheiaCore.maximize()),\n            this.createControlButton('restore', () => window.electronTheiaCore.unMaximize()),\n            this.createControlButton('close', () => window.electronTheiaCore.close())\n        );\n        app.shell.topPanel.node.append(controls);\n        this.handleWindowControls();\n    }\n\n    protected createCustomTitleWidget(app: FrontendApplication): void {\n        const titleWidget = this.customTitleWidgetFactory();\n        if (titleWidget) {\n            app.shell.addWidget(titleWidget, { area: 'top' });\n        }\n    }\n\n    protected handleWindowControls(): void {\n        toggleControlButtons();\n        window.electronTheiaCore.onWindowEvent('maximize', toggleControlButtons);\n        window.electronTheiaCore.onWindowEvent('unmaximize', toggleControlButtons);\n\n        function toggleControlButtons(): void {\n            if (window.electronTheiaCore.isMaximized()) {\n                document.body.classList.add('maximized');\n            } else {\n                document.body.classList.remove('maximized');\n            }\n        }\n    }\n\n    protected createControlButton(id: string, handler: () => void): HTMLElement {\n        const button = document.createElement('div');\n        button.id = `${id}-button`;\n        button.className = `control-button ${codicon(`chrome-${id}`)}`;\n        button.addEventListener('click', handler);\n        return button;\n    }\n\n    protected async handleRequiredRestart(): Promise<void> {\n        const msgNode = document.createElement('div');\n        const message = document.createElement('p');\n        message.textContent = nls.localizeByDefault('A setting has changed that requires a restart to take effect.');\n        const detail = document.createElement('p');\n        detail.textContent = nls.localizeByDefault(\n            'Press the restart button to restart {0} and enable the setting.', FrontendApplicationConfigProvider.get().applicationName);\n        msgNode.append(message, detail);\n        const restart = nls.localizeByDefault('Restart');\n        const dialog = new ConfirmDialog({\n            title: restart,\n            msg: msgNode,\n            ok: restart,\n            cancel: Dialog.CANCEL\n        });\n        if (await dialog.open()) {\n            this.windowService.setSafeToShutDown();\n            window.electronTheiaCore.restart();\n        }\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n\n        registry.registerCommand(ElectronCommands.TOGGLE_DEVELOPER_TOOLS, {\n            execute: () => {\n                window.electronTheiaCore.toggleDevTools();\n            }\n        });\n\n        registry.registerCommand(ElectronCommands.RELOAD, {\n            execute: () => this.windowService.reload()\n        });\n        registry.registerCommand(ElectronCommands.CLOSE_WINDOW, {\n            execute: () => window.electronTheiaCore.close()\n        });\n\n        registry.registerCommand(ElectronCommands.ZOOM_IN, {\n            execute: async () => {\n                const currentLevel = await window.electronTheiaCore.getZoomLevel();\n                // When starting at a level that is not a multiple of 0.5, increment by at most 0.5 to reach the next highest multiple of 0.5.\n                let zoomLevel = (Math.floor(currentLevel / ZoomLevel.VARIATION) * ZoomLevel.VARIATION) + ZoomLevel.VARIATION;\n                if (zoomLevel > ZoomLevel.MAX) {\n                    zoomLevel = ZoomLevel.MAX;\n                    return;\n                };\n                this.preferenceService.set('window.zoomLevel', zoomLevel, PreferenceScope.User);\n            }\n        });\n        registry.registerCommand(ElectronCommands.ZOOM_OUT, {\n            execute: async () => {\n                const currentLevel = await window.electronTheiaCore.getZoomLevel();\n                // When starting at a level that is not a multiple of 0.5, decrement by at most 0.5 to reach the next lowest multiple of 0.5.\n                let zoomLevel = (Math.ceil(currentLevel / ZoomLevel.VARIATION) * ZoomLevel.VARIATION) - ZoomLevel.VARIATION;\n                if (zoomLevel < ZoomLevel.MIN) {\n                    zoomLevel = ZoomLevel.MIN;\n                    return;\n                };\n                this.preferenceService.set('window.zoomLevel', zoomLevel, PreferenceScope.User);\n            }\n        });\n        registry.registerCommand(ElectronCommands.RESET_ZOOM, {\n            execute: () => this.preferenceService.set('window.zoomLevel', ZoomLevel.DEFAULT, PreferenceScope.User)\n        });\n\n        registry.registerCommand(ElectronCommands.TOGGLE_FULL_SCREEN, {\n            isEnabled: () => window.electronTheiaCore.isFullScreenable(),\n            isVisible: () => window.electronTheiaCore.isFullScreenable(),\n            execute: () => this.toggleFullScreen()\n        });\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        registry.registerKeybindings(\n            {\n                command: ElectronCommands.TOGGLE_DEVELOPER_TOOLS.id,\n                keybinding: 'ctrlcmd+alt+i'\n            },\n            {\n                command: ElectronCommands.RELOAD.id,\n                keybinding: 'ctrlcmd+r'\n            },\n            {\n                command: ElectronCommands.ZOOM_IN.id,\n                keybinding: 'ctrlcmd+='\n            },\n            {\n                command: ElectronCommands.ZOOM_IN.id,\n                keybinding: 'ctrlcmd+add'\n            },\n            {\n                command: ElectronCommands.ZOOM_OUT.id,\n                keybinding: 'ctrlcmd+subtract'\n            },\n            {\n                command: ElectronCommands.ZOOM_OUT.id,\n                keybinding: 'ctrlcmd+-'\n            },\n            {\n                command: ElectronCommands.RESET_ZOOM.id,\n                keybinding: 'ctrlcmd+0'\n            },\n            {\n                command: ElectronCommands.CLOSE_WINDOW.id,\n                keybinding: (isOSX ? 'cmd+shift+w' : (isWindows ? 'ctrl+w' : /* Linux */ 'ctrl+q'))\n            },\n            {\n                command: ElectronCommands.TOGGLE_FULL_SCREEN.id,\n                keybinding: isOSX ? 'ctrl+ctrlcmd+f' : 'f11'\n            }\n        );\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(ElectronMenus.HELP_TOGGLE, {\n            commandId: ElectronCommands.TOGGLE_DEVELOPER_TOOLS.id\n        });\n\n        registry.registerMenuAction(ElectronMenus.VIEW_WINDOW, {\n            commandId: ElectronCommands.RELOAD.id,\n            order: 'z0'\n        });\n\n        registry.registerMenuAction(ElectronMenus.VIEW_ZOOM, {\n            commandId: ElectronCommands.ZOOM_IN.id,\n            order: 'z1'\n        });\n        registry.registerMenuAction(ElectronMenus.VIEW_ZOOM, {\n            commandId: ElectronCommands.ZOOM_OUT.id,\n            order: 'z2'\n        });\n        registry.registerMenuAction(ElectronMenus.VIEW_ZOOM, {\n            commandId: ElectronCommands.RESET_ZOOM.id,\n            order: 'z3'\n        });\n        registry.registerMenuAction(ElectronMenus.FILE_CLOSE, {\n            commandId: ElectronCommands.CLOSE_WINDOW.id,\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_APPEARANCE_SUBMENU_SCREEN, {\n            commandId: ElectronCommands.TOGGLE_FULL_SCREEN.id,\n            label: nls.localizeByDefault('Full Screen'),\n            order: '0'\n        });\n    }\n\n    protected toggleFullScreen(): void {\n        window.electronTheiaCore.toggleFullScreen();\n        const menuBarVisibility = this.preferenceService.get('window.menuBarVisibility', 'classic');\n        this.handleFullScreen(menuBarVisibility);\n    }\n\n    protected handleFullScreen(menuBarVisibility: string): void {\n        const shouldShowTop = !window.electronTheiaCore.isFullScreen() || menuBarVisibility === 'visible';\n        if (this.titleBarStyle === 'native') {\n            window.electronTheiaCore.setMenuBarVisible(shouldShowTop);\n        } else if (shouldShowTop) {\n            this.shell.topPanel.show();\n        } else {\n            this.shell.topPanel.hide();\n        }\n    }\n\n}\n\n@injectable()\nexport class CustomTitleWidget extends Widget {\n\n    @inject(ElectronMenuContribution)\n    protected readonly electronMenuContribution: ElectronMenuContribution;\n\n    @inject(WindowTitleService)\n    protected readonly windowTitleService: WindowTitleService;\n\n    @inject(ApplicationShell)\n    protected readonly applicationShell: ApplicationShell;\n\n    constructor() {\n        super();\n        this.id = 'theia-custom-title';\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.updateTitle(this.windowTitleService.title);\n        this.windowTitleService.onDidChangeTitle(title => {\n            this.updateTitle(title);\n        });\n    }\n\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        this.adjustTitleToCenter();\n        super.onResize(msg);\n    }\n\n    protected override onAfterShow(msg: Message): void {\n        this.adjustTitleToCenter();\n        super.onAfterShow(msg);\n    }\n\n    protected updateTitle(title: string): void {\n        this.node.textContent = title;\n        this.adjustTitleToCenter();\n    }\n\n    protected adjustTitleToCenter(): void {\n        const menubar = this.electronMenuContribution.menuBar;\n        if (menubar) {\n            const titleWidth = this.node.clientWidth;\n            const margin = 16;\n            const leftMarker = menubar.node.offsetLeft + menubar.node.clientWidth + margin;\n            const panelWidth = this.applicationShell.topPanel.node.clientWidth;\n            const controlsWidth = 48 * 3; // Each window button has a width of 48px\n            const rightMarker = panelWidth - controlsWidth - margin;\n\n            let hidden = false;\n            let relative = false;\n            this.node.style.left = '50%';\n            // The title has not enough space between the menu and the window controls\n            // So we simply hide it\n            if (rightMarker - leftMarker < titleWidth) {\n                hidden = true;\n            } else if ((panelWidth - titleWidth) / 2 < leftMarker || (panelWidth + titleWidth) / 2 > rightMarker) {\n                // This indicates that the title has either hit the left (menu) or right (window controls) marker\n                relative = true;\n                this.node.style.left = `${leftMarker + (rightMarker - leftMarker - titleWidth) / 2}px`;\n            }\n            this.node.classList.toggle('hidden', hidden);\n            this.node.classList.toggle('relative', relative);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from 'inversify';\nimport { CommandContribution, MenuContribution } from '../../common';\nimport { FrontendApplicationContribution, ContextMenuRenderer, KeybindingContribution, KeybindingContext } from '../../browser';\nimport { ElectronMainMenuFactory } from './electron-main-menu-factory';\nimport { ElectronContextMenuRenderer, ElectronTextInputContextMenuContribution } from './electron-context-menu-renderer';\nimport { CustomTitleWidget, CustomTitleWidgetFactory, ElectronMenuContribution } from './electron-menu-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(ElectronMainMenuFactory).toSelf().inSingletonScope();\n    bind(ContextMenuRenderer).to(ElectronContextMenuRenderer).inSingletonScope();\n    bind(KeybindingContext).toConstantValue({\n        id: 'theia.context',\n        isEnabled: true\n    });\n\n    bind(ElectronMenuContribution).toSelf().inSingletonScope();\n    for (const serviceIdentifier of [FrontendApplicationContribution, KeybindingContribution, CommandContribution, MenuContribution]) {\n        bind(serviceIdentifier).toService(ElectronMenuContribution);\n    }\n    bind(CustomTitleWidget).toSelf().inSingletonScope();\n    bind(CustomTitleWidgetFactory).toFactory(context => () => context.container.get(CustomTitleWidget));\n    bind(FrontendApplicationContribution).to(ElectronTextInputContextMenuContribution).inSingletonScope();\n    bind(MenuContribution).to(ElectronTextInputContextMenuContribution).inSingletonScope();\n});\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from 'inversify';\nimport { nls } from '../../common/nls';\nimport { createPreferenceProxy, PreferenceContribution, PreferenceProxy, PreferenceSchema, PreferenceService } from '../../browser/preferences';\nimport { isOSX, isWindows } from '../../common';\n\nexport namespace ZoomLevel {\n    export const DEFAULT = 0;\n    // copied from https://github.com/microsoft/vscode/blob/dda96b69bfc63f309e60cfc5f98cb863c46b32ac/src/vs/workbench/electron-sandbox/actions/windowActions.ts#L47-L48\n    export const MIN = -8;\n    export const MAX = 9;\n    // amount to increment or decrement the window zoom level.\n    export const VARIATION = 0.5;\n}\n\nexport const electronWindowPreferencesSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'window.zoomLevel': {\n            'type': 'number',\n            'default': ZoomLevel.DEFAULT,\n            'minimum': ZoomLevel.MIN,\n            'maximum': ZoomLevel.MAX,\n            'scope': 'application',\n            // eslint-disable-next-line max-len\n            'description': nls.localizeByDefault('Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.')\n        },\n        'window.titleBarStyle': {\n            type: 'string',\n            enum: ['native', 'custom'],\n            default: isWindows ? 'custom' : 'native',\n            scope: 'application',\n            // eslint-disable-next-line max-len\n            description: nls.localizeByDefault('Adjust the appearance of the window title bar. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restart to apply.'),\n            included: !isOSX\n        },\n    }\n};\n\nexport class ElectronWindowConfiguration {\n    'window.zoomLevel': number;\n    'window.titleBarStyle': 'native' | 'custom';\n}\n\nexport const ElectronWindowPreferenceContribution = Symbol('ElectronWindowPreferenceContribution');\nexport const ElectronWindowPreferences = Symbol('ElectronWindowPreferences');\nexport type ElectronWindowPreferences = PreferenceProxy<ElectronWindowConfiguration>;\n\nexport function createElectronWindowPreferences(preferences: PreferenceService, schema: PreferenceSchema = electronWindowPreferencesSchema): ElectronWindowPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindWindowPreferences(bind: interfaces.Bind): void {\n    bind(ElectronWindowPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(ElectronWindowPreferenceContribution);\n        return createElectronWindowPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(ElectronWindowPreferenceContribution).toConstantValue({ schema: electronWindowPreferencesSchema });\n    bind(PreferenceContribution).toService(ElectronWindowPreferenceContribution);\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./electron-menu-style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}