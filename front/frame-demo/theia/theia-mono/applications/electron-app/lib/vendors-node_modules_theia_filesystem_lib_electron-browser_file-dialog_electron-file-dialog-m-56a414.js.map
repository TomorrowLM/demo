{"version":3,"file":"vendors-node_modules_theia_filesystem_lib_electron-browser_file-dialog_electron-file-dialog-m-56a414.js","mappings":"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","sources":["webpack:///../../node_modules/@theia/core/src/node/file-uri.ts?","webpack:///../../node_modules/@theia/filesystem/src/electron-browser/file-dialog/electron-file-dialog-module.ts?","webpack:///../../node_modules/@theia/filesystem/src/electron-browser/file-dialog/electron-file-dialog-service.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI as Uri } from 'vscode-uri';\nimport URI from '../common/uri';\nimport { isWindows } from '../common/os';\n\nexport namespace FileUri {\n\n    const windowsDriveRegex = /^([^:/?#]+?):$/;\n\n    /**\n     * Creates a new file URI from the filesystem path argument.\n     * @param fsPath the filesystem path.\n     */\n    export function create(fsPath_: string): URI {\n        return new URI(Uri.file(fsPath_));\n    }\n\n    /**\n     * Returns with the platform specific FS path that is represented by the URI argument.\n     *\n     * @param uri the file URI that has to be resolved to a platform specific FS path.\n     */\n    export function fsPath(uri: URI | string): string {\n        if (typeof uri === 'string') {\n            return fsPath(new URI(uri));\n        } else {\n            /*\n             * A uri for the root of a Windows drive, eg file:\\\\\\c%3A, is converted to c:\n             * by the Uri class.  However file:\\\\\\c%3A is unambiguously a uri to the root of\n             * the drive and c: is interpreted as the default directory for the c drive\n             * (by, for example, the readdir function in the fs-extra module).\n             * A backslash must be appended to the drive, eg c:\\, to ensure the correct path.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsPathFromVsCodeUri = (uri as any).codeUri.fsPath;\n            if (isWindows) {\n                const isWindowsDriveRoot = windowsDriveRegex.exec(fsPathFromVsCodeUri);\n                if (isWindowsDriveRoot) {\n                    return fsPathFromVsCodeUri + '\\\\';\n                }\n            }\n            return fsPathFromVsCodeUri;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { FileDialogService } from '../../browser/file-dialog/file-dialog-service';\nimport { ElectronFileDialogService } from './electron-file-dialog-service';\n\nexport default new ContainerModule(bind => {\n    bind(ElectronFileDialogService).toSelf().inSingletonScope();\n    bind(FileDialogService).toService(ElectronFileDialogService);\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { MaybeArray } from '@theia/core/lib/common/types';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { FileStat } from '../../common/files';\nimport { FileAccess } from '../../common/filesystem';\nimport { DefaultFileDialogService, OpenFileDialogProps, SaveFileDialogProps } from '../../browser/file-dialog';\n//\n// We are OK to use this here because the electron backend and frontend are on the same host.\n// If required, we can move this single service (and its module) to a dedicated Theia extension,\n// and at packaging time, clients can decide whether they need the native or the browser-based\n// solution.\n//\n// eslint-disable-next-line @theia/runtime-import-check\nimport { FileUri } from '@theia/core/lib/node/file-uri';\nimport { OpenDialogOptions, SaveDialogOptions } from '../../electron-common/electron-api';\n\n@injectable()\nexport class ElectronFileDialogService extends DefaultFileDialogService {\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    override async showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n    override async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\n    override async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined> {\n        const rootNode = await this.getRootNode(folder);\n        if (rootNode) {\n            const filePaths = await window.electronTheiaFilesystem.showOpenDialog(this.toOpenDialogOptions(rootNode.uri, props));\n            if (!filePaths || filePaths.length === 0) {\n                return undefined;\n            }\n\n            const uris = filePaths.map(path => FileUri.create(path));\n            const canAccess = await this.canRead(uris);\n            const result = canAccess ? uris.length === 1 ? uris[0] : uris : undefined;\n            return result;\n        }\n        return undefined;\n    }\n\n    override async showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined> {\n        const rootNode = await this.getRootNode(folder);\n        if (rootNode) {\n            const filePath = await window.electronTheiaFilesystem.showSaveDialog(this.toSaveDialogOptions(rootNode.uri, props));\n\n            if (!filePath) {\n                return undefined;\n            }\n\n            const uri = FileUri.create(filePath);\n            const exists = await this.fileService.exists(uri);\n            if (!exists) {\n                return uri;\n            }\n\n            const canWrite = await this.canReadWrite(uri);\n            return canWrite ? uri : undefined;\n        }\n        return undefined;\n    }\n\n    protected async canReadWrite(uris: MaybeArray<URI>): Promise<boolean> {\n        for (const uri of Array.isArray(uris) ? uris : [uris]) {\n            if (!(await this.fileService.access(uri, FileAccess.Constants.R_OK | FileAccess.Constants.W_OK))) {\n                this.messageService.error(`Cannot access resource at ${uri.path}.`);\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async canRead(uris: MaybeArray<URI>): Promise<boolean> {\n        const resources = Array.isArray(uris) ? uris : [uris];\n        const unreadableResourcePaths: string[] = [];\n        await Promise.all(resources.map(async resource => {\n            if (!await this.fileService.access(resource, FileAccess.Constants.R_OK)) {\n                unreadableResourcePaths.push(resource.path.toString());\n            }\n        }));\n        if (unreadableResourcePaths.length > 0) {\n            this.messageService.error(`Cannot read ${unreadableResourcePaths.length} resource(s): ${unreadableResourcePaths.join(', ')}`);\n        }\n        return unreadableResourcePaths.length === 0;\n    }\n\n    protected toOpenDialogOptions(uri: URI, props: OpenFileDialogProps): OpenDialogOptions {\n        if (!isOSX && props.canSelectFiles !== false && props.canSelectFolders === true) {\n            console.warn(`Cannot have 'canSelectFiles' and 'canSelectFolders' at the same time. Fallback to 'folder' dialog. \\nProps was: ${JSON.stringify(props)}.`);\n\n            // Given that both props are set, fallback to using a `folder` dialog.\n            props.canSelectFiles = false;\n            props.canSelectFolders = true;\n        }\n\n        const result: OpenDialogOptions = {\n            path: FileUri.fsPath(uri)\n        };\n\n        result.title = props.title;\n        result.buttonLabel = props.openLabel;\n        result.maxWidth = props.maxWidth;\n        result.modal = props.modal;\n        result.openFiles = props.canSelectFiles;\n        result.openFolders = props.canSelectFolders;\n        result.selectMany = props.canSelectMany;\n\n        if (props.filters) {\n            result.filters = [];\n            const filters = Object.entries(props.filters);\n            for (const [label, extensions] of filters) {\n                result.filters.push({ name: label, extensions: extensions });\n            }\n\n            if (props.canSelectFiles) {\n                if (filters.length > 0) {\n                    result.filters.push({ name: 'All Files', extensions: ['*'] });\n                }\n            }\n        }\n\n        return result;\n    }\n\n    protected toSaveDialogOptions(uri: URI, props: SaveFileDialogProps): SaveDialogOptions {\n        if (props.inputValue) {\n            uri = uri.resolve(props.inputValue);\n        }\n\n        const result: SaveDialogOptions = {\n            path: FileUri.fsPath(uri)\n        };\n\n        result.title = props.title;\n        result.buttonLabel = props.saveLabel;\n        result.maxWidth = props.maxWidth;\n        result.modal = props.modal;\n\n        if (props.filters) {\n            result.filters = [];\n            const filters = Object.entries(props.filters);\n            for (const [label, extensions] of filters) {\n                result.filters.push({ name: label, extensions: extensions });\n            }\n        }\n\n        return result;\n    }\n\n}\n"],"names":[],"sourceRoot":""}