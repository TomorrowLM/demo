{"version":3,"file":"js/vendors-0c02f28f.70f053cfd108db144d64.js","mappings":"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","sources":["webpack://qiankun/./node_modules/qiankun/es/sandbox/proxySandbox.js","webpack://qiankun/./node_modules/qiankun/es/sandbox/snapshotSandbox.js","webpack://qiankun/./node_modules/qiankun/es/version.js","webpack://qiankun/./node_modules/qiankun/es/utils.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _without from \"lodash/without\";\n/* eslint-disable no-param-reassign */\n/**\n * @author Kuitos\n * @since 2020-3-31\n */\nimport { SandBoxType } from '../interfaces';\nimport { isPropertyFrozen, nativeGlobal, nextTask } from '../utils';\nimport { clearCurrentRunningApp, getCurrentRunningApp, rebindTarget2Fn, setCurrentRunningApp } from './common';\nimport { globalsInBrowser, globalsInES2015 } from './globals';\n/**\n * fastest(at most time) unique array method\n * @see https://jsperf.com/array-filter-unique/30\n */\nfunction uniq(array) {\n  return array.filter(function filter(element) {\n    return element in this ? false : this[element] = true;\n  }, Object.create(null));\n}\n/**\n * transform array to object to enable faster element check with in operator\n * @param array\n */\nfunction array2TruthyObject(array) {\n  return array.reduce(function (acc, key) {\n    acc[key] = true;\n    return acc;\n  },\n  // Notes that babel will transpile spread operator to Object.assign({}, ...args), which will keep the prototype of Object in merged object,\n  // while this result used as Symbol.unscopables, it will make properties in Object.prototype always be escaped from proxy sandbox as unscopables check will look up prototype chain as well,\n  // such as hasOwnProperty, toString, valueOf, etc.\n  // so we should use Object.create(null) to create a pure object without prototype chain here.\n  Object.create(null));\n}\nvar cachedGlobalsInBrowser = array2TruthyObject(globalsInBrowser.concat(process.env.NODE_ENV === 'test' ? ['mockNativeWindowFunction'] : []));\nfunction isNativeGlobalProp(prop) {\n  return prop in cachedGlobalsInBrowser;\n}\n// zone.js will overwrite Object.defineProperty\nvar rawObjectDefineProperty = Object.defineProperty;\nvar variableWhiteListInDev = process.env.NODE_ENV === 'test' || process.env.NODE_ENV === 'development' || window.__QIANKUN_DEVELOPMENT__ ? [\n// for react hot reload\n// see https://github.com/facebook/create-react-app/blob/66bf7dfc43350249e2f09d138a20840dae8a0a4a/packages/react-error-overlay/src/index.js#L180\n'__REACT_ERROR_OVERLAY_GLOBAL_HOOK__',\n// for react development event issue, see https://github.com/umijs/qiankun/issues/2375\n'event'] : [];\n// who could escape the sandbox\nvar globalVariableWhiteList = [\n// FIXME System.js used a indirect call with eval, which would make it scope escape to global\n// To make System.js works well, we write it back to global window temporary\n// see https://github.com/systemjs/systemjs/blob/457f5b7e8af6bd120a279540477552a07d5de086/src/evaluate.js#L106\n'System',\n// see https://github.com/systemjs/systemjs/blob/457f5b7e8af6bd120a279540477552a07d5de086/src/instantiate.js#L357\n'__cjsWrapper'].concat(variableWhiteListInDev);\nvar inTest = process.env.NODE_ENV === 'test';\nvar mockSafariTop = 'mockSafariTop';\nvar mockTop = 'mockTop';\nvar mockGlobalThis = 'mockGlobalThis';\n// these globals should be recorded while accessing every time\nvar accessingSpiedGlobals = ['document', 'top', 'parent', 'eval'];\nvar overwrittenGlobals = ['window', 'self', 'globalThis', 'hasOwnProperty'].concat(inTest ? [mockGlobalThis] : []);\nexport var cachedGlobals = Array.from(new Set(_without.apply(void 0, [globalsInES2015.concat(overwrittenGlobals).concat('requestAnimationFrame')].concat(accessingSpiedGlobals))));\nvar cachedGlobalObjects = array2TruthyObject(cachedGlobals);\n/*\n Variables who are impossible to be overwritten need to be escaped from proxy sandbox for performance reasons.\n But overwritten globals must not be escaped, otherwise they will be leaked to the global scope.\n see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables\n */\nvar unscopables = array2TruthyObject(_without.apply(void 0, [cachedGlobals].concat(_toConsumableArray(accessingSpiedGlobals.concat(overwrittenGlobals)))));\nvar useNativeWindowForBindingsProps = new Map([['fetch', true], ['mockDomAPIInBlackList', process.env.NODE_ENV === 'test']]);\nfunction createFakeWindow(globalContext, speedy) {\n  // map always has the fastest performance in has checked scenario\n  // see https://jsperf.com/array-indexof-vs-set-has/23\n  var propertiesWithGetter = new Map();\n  var fakeWindow = {};\n  /*\n   copy the non-configurable property of global to fakeWindow\n   see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor\n   > A property cannot be reported as non-configurable, if it does not exist as an own property of the target object or if it exists as a configurable own property of the target object.\n   */\n  Object.getOwnPropertyNames(globalContext).filter(function (p) {\n    var descriptor = Object.getOwnPropertyDescriptor(globalContext, p);\n    return !(descriptor === null || descriptor === void 0 ? void 0 : descriptor.configurable);\n  }).forEach(function (p) {\n    var descriptor = Object.getOwnPropertyDescriptor(globalContext, p);\n    if (descriptor) {\n      var hasGetter = Object.prototype.hasOwnProperty.call(descriptor, 'get');\n      /*\n       make top/self/window property configurable and writable, otherwise it will cause TypeError while get trap return.\n       see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get\n       > The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable data property.\n       */\n      if (p === 'top' || p === 'parent' || p === 'self' || p === 'window' ||\n      // window.document is overwriting in speedy mode\n      p === 'document' && speedy || inTest && (p === mockTop || p === mockSafariTop)) {\n        descriptor.configurable = true;\n        /*\n         The descriptor of window.window/window.top/window.self in Safari/FF are accessor descriptors, we need to avoid adding a data descriptor while it was\n         Example:\n          Safari/FF: Object.getOwnPropertyDescriptor(window, 'top') -> {get: function, set: undefined, enumerable: true, configurable: false}\n          Chrome: Object.getOwnPropertyDescriptor(window, 'top') -> {value: Window, writable: false, enumerable: true, configurable: false}\n         */\n        if (!hasGetter) {\n          descriptor.writable = true;\n        }\n      }\n      if (hasGetter) propertiesWithGetter.set(p, true);\n      // freeze the descriptor to avoid being modified by zone.js\n      // see https://github.com/angular/zone.js/blob/a5fe09b0fac27ac5df1fa746042f96f05ccb6a00/lib/browser/define-property.ts#L71\n      rawObjectDefineProperty(fakeWindow, p, Object.freeze(descriptor));\n    }\n  });\n  return {\n    fakeWindow: fakeWindow,\n    propertiesWithGetter: propertiesWithGetter\n  };\n}\nvar activeSandboxCount = 0;\n/**\n * 基于 Proxy 实现的沙箱\n */\nvar ProxySandbox = /*#__PURE__*/function () {\n  function ProxySandbox(name) {\n    var _this = this;\n    var globalContext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n    var opts = arguments.length > 2 ? arguments[2] : undefined;\n    _classCallCheck(this, ProxySandbox);\n    /** window 值变更记录 */\n    this.updatedValueSet = new Set();\n    this.document = document;\n    this.name = void 0;\n    this.type = void 0;\n    this.proxy = void 0;\n    this.sandboxRunning = true;\n    this.latestSetProp = null;\n    // the descriptor of global variables in whitelist before it been modified\n    this.globalWhitelistPrevDescriptor = {};\n    this.globalContext = void 0;\n    this.name = name;\n    this.globalContext = globalContext;\n    this.type = SandBoxType.Proxy;\n    var updatedValueSet = this.updatedValueSet;\n    var _ref = opts || {},\n      speedy = _ref.speedy;\n    var _createFakeWindow = createFakeWindow(globalContext, !!speedy),\n      fakeWindow = _createFakeWindow.fakeWindow,\n      propertiesWithGetter = _createFakeWindow.propertiesWithGetter;\n    var descriptorTargetMap = new Map();\n    var proxy = new Proxy(fakeWindow, {\n      set: function set(target, p, value) {\n        if (_this.sandboxRunning) {\n          _this.registerRunningApp(name, proxy);\n          // sync the property to globalContext\n          if (typeof p === 'string' && globalVariableWhiteList.indexOf(p) !== -1) {\n            _this.globalWhitelistPrevDescriptor[p] = Object.getOwnPropertyDescriptor(globalContext, p);\n            // @ts-ignore\n            globalContext[p] = value;\n          } else {\n            // We must keep its description while the property existed in globalContext before\n            if (!target.hasOwnProperty(p) && globalContext.hasOwnProperty(p)) {\n              var descriptor = Object.getOwnPropertyDescriptor(globalContext, p);\n              var writable = descriptor.writable,\n                configurable = descriptor.configurable,\n                enumerable = descriptor.enumerable,\n                set = descriptor.set;\n              // only writable property can be overwritten\n              // here we ignored accessor descriptor of globalContext as it makes no sense to trigger its logic(which might make sandbox escaping instead)\n              // we force to set value by data descriptor\n              if (writable || set) {\n                Object.defineProperty(target, p, {\n                  configurable: configurable,\n                  enumerable: enumerable,\n                  writable: true,\n                  value: value\n                });\n              }\n            } else {\n              target[p] = value;\n            }\n          }\n          updatedValueSet.add(p);\n          _this.latestSetProp = p;\n          return true;\n        }\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\"[qiankun] Set window.\".concat(p.toString(), \" while sandbox destroyed or inactive in \").concat(name, \"!\"));\n        }\n        // 在 strict-mode 下，Proxy 的 handler.set 返回 false 会抛出 TypeError，在沙箱卸载的情况下应该忽略错误\n        return true;\n      },\n      get: function get(target, p) {\n        _this.registerRunningApp(name, proxy);\n        if (p === Symbol.unscopables) return unscopables;\n        // avoid who using window.window or window.self to escape the sandbox environment to touch the real window\n        // see https://github.com/eligrey/FileSaver.js/blob/master/src/FileSaver.js#L13\n        if (p === 'window' || p === 'self') {\n          return proxy;\n        }\n        // hijack globalWindow accessing with globalThis keyword\n        if (p === 'globalThis' || inTest && p === mockGlobalThis) {\n          return proxy;\n        }\n        if (p === 'top' || p === 'parent' || inTest && (p === mockTop || p === mockSafariTop)) {\n          // if your master app in an iframe context, allow these props escape the sandbox\n          if (globalContext === globalContext.parent) {\n            return proxy;\n          }\n          return globalContext[p];\n        }\n        // proxy.hasOwnProperty would invoke getter firstly, then its value represented as globalContext.hasOwnProperty\n        if (p === 'hasOwnProperty') {\n          return hasOwnProperty;\n        }\n        if (p === 'document') {\n          return _this.document;\n        }\n        if (p === 'eval') {\n          return eval;\n        }\n        if (p === 'string' && globalVariableWhiteList.indexOf(p) !== -1) {\n          // @ts-ignore\n          return globalContext[p];\n        }\n        var actualTarget = propertiesWithGetter.has(p) ? globalContext : p in target ? target : globalContext;\n        var value = actualTarget[p];\n        // frozen value should return directly, see https://github.com/umijs/qiankun/issues/2015\n        if (isPropertyFrozen(actualTarget, p)) {\n          return value;\n        }\n        // non-native property return directly to avoid rebind\n        if (!isNativeGlobalProp(p) && !useNativeWindowForBindingsProps.has(p)) {\n          return value;\n        }\n        /* Some dom api must be bound to native window, otherwise it would cause exception like 'TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation'\n           See this code:\n             const proxy = new Proxy(window, {});\n             // in nest sandbox fetch will be bind to proxy rather than window in master\n             const proxyFetch = fetch.bind(proxy);\n             proxyFetch('https://qiankun.com');\n        */\n        var boundTarget = useNativeWindowForBindingsProps.get(p) ? nativeGlobal : globalContext;\n        return rebindTarget2Fn(boundTarget, value);\n      },\n      // trap in operator\n      // see https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/constants.js#L12\n      has: function has(target, p) {\n        // property in cachedGlobalObjects must return true to avoid escape from get trap\n        return p in cachedGlobalObjects || p in target || p in globalContext;\n      },\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, p) {\n        /*\n         as the descriptor of top/self/window/mockTop in raw window are configurable but not in proxy target, we need to get it from target to avoid TypeError\n         see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor\n         > A property cannot be reported as non-configurable, if it does not exist as an own property of the target object or if it exists as a configurable own property of the target object.\n         */\n        if (target.hasOwnProperty(p)) {\n          var descriptor = Object.getOwnPropertyDescriptor(target, p);\n          descriptorTargetMap.set(p, 'target');\n          return descriptor;\n        }\n        if (globalContext.hasOwnProperty(p)) {\n          var _descriptor = Object.getOwnPropertyDescriptor(globalContext, p);\n          descriptorTargetMap.set(p, 'globalContext');\n          // A property cannot be reported as non-configurable, if it does not exist as an own property of the target object\n          if (_descriptor && !_descriptor.configurable) {\n            _descriptor.configurable = true;\n          }\n          return _descriptor;\n        }\n        return undefined;\n      },\n      // trap to support iterator with sandbox\n      ownKeys: function ownKeys(target) {\n        return uniq(Reflect.ownKeys(globalContext).concat(Reflect.ownKeys(target)));\n      },\n      defineProperty: function defineProperty(target, p, attributes) {\n        var from = descriptorTargetMap.get(p);\n        /*\n         Descriptor must be defined to native window while it comes from native window via Object.getOwnPropertyDescriptor(window, p),\n         otherwise it would cause a TypeError with illegal invocation.\n         */\n        switch (from) {\n          case 'globalContext':\n            return Reflect.defineProperty(globalContext, p, attributes);\n          default:\n            return Reflect.defineProperty(target, p, attributes);\n        }\n      },\n      deleteProperty: function deleteProperty(target, p) {\n        _this.registerRunningApp(name, proxy);\n        if (target.hasOwnProperty(p)) {\n          // @ts-ignore\n          delete target[p];\n          updatedValueSet.delete(p);\n          return true;\n        }\n        return true;\n      },\n      // makes sure `window instanceof Window` returns truthy in micro app\n      getPrototypeOf: function getPrototypeOf() {\n        return Reflect.getPrototypeOf(globalContext);\n      }\n    });\n    this.proxy = proxy;\n    activeSandboxCount++;\n    function hasOwnProperty(key) {\n      // calling from hasOwnProperty.call(obj, key)\n      if (this !== proxy && this !== null && _typeof(this) === 'object') {\n        return Object.prototype.hasOwnProperty.call(this, key);\n      }\n      return fakeWindow.hasOwnProperty(key) || globalContext.hasOwnProperty(key);\n    }\n  }\n  _createClass(ProxySandbox, [{\n    key: \"active\",\n    value: function active() {\n      if (!this.sandboxRunning) activeSandboxCount++;\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      var _this2 = this;\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" modified global properties restore...\"), _toConsumableArray(this.updatedValueSet.keys()));\n      }\n      if (inTest || --activeSandboxCount === 0) {\n        // reset the global value to the prev value\n        Object.keys(this.globalWhitelistPrevDescriptor).forEach(function (p) {\n          var descriptor = _this2.globalWhitelistPrevDescriptor[p];\n          if (descriptor) {\n            Object.defineProperty(_this2.globalContext, p, descriptor);\n          } else {\n            // @ts-ignore\n            delete _this2.globalContext[p];\n          }\n        });\n      }\n      this.sandboxRunning = false;\n    }\n  }, {\n    key: \"patchDocument\",\n    value: function patchDocument(doc) {\n      this.document = doc;\n    }\n  }, {\n    key: \"registerRunningApp\",\n    value: function registerRunningApp(name, proxy) {\n      if (this.sandboxRunning) {\n        var currentRunningApp = getCurrentRunningApp();\n        if (!currentRunningApp || currentRunningApp.name !== name) {\n          setCurrentRunningApp({\n            name: name,\n            window: proxy\n          });\n        }\n        // FIXME if you have any other good ideas\n        // remove the mark in next tick, thus we can identify whether it in micro app or not\n        // this approach is just a workaround, it could not cover all complex cases, such as the micro app runs in the same task context with master in some case\n        nextTask(clearCurrentRunningApp);\n      }\n    }\n  }]);\n  return ProxySandbox;\n}();\nexport { ProxySandbox as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { SandBoxType } from '../interfaces';\nfunction iter(obj, callbackFn) {\n  // eslint-disable-next-line guard-for-in, no-restricted-syntax\n  for (var prop in obj) {\n    // patch for clearInterval for compatible reason, see #1490\n    if (obj.hasOwnProperty(prop) || prop === 'clearInterval') {\n      callbackFn(prop);\n    }\n  }\n}\n/**\n * 基于 diff 方式实现的沙箱，用于不支持 Proxy 的低版本浏览器\n */\nvar SnapshotSandbox = /*#__PURE__*/function () {\n  function SnapshotSandbox(name) {\n    _classCallCheck(this, SnapshotSandbox);\n    this.proxy = void 0;\n    this.name = void 0;\n    this.type = void 0;\n    this.sandboxRunning = true;\n    this.windowSnapshot = void 0;\n    this.modifyPropsMap = {};\n    this.name = name;\n    this.proxy = window;\n    this.type = SandBoxType.Snapshot;\n  }\n  _createClass(SnapshotSandbox, [{\n    key: \"active\",\n    value: function active() {\n      var _this = this;\n      // 记录当前快照\n      this.windowSnapshot = {};\n      iter(window, function (prop) {\n        _this.windowSnapshot[prop] = window[prop];\n      });\n      // 恢复之前的变更\n      Object.keys(this.modifyPropsMap).forEach(function (p) {\n        window[p] = _this.modifyPropsMap[p];\n      });\n      this.sandboxRunning = true;\n    }\n  }, {\n    key: \"inactive\",\n    value: function inactive() {\n      var _this2 = this;\n      this.modifyPropsMap = {};\n      iter(window, function (prop) {\n        if (window[prop] !== _this2.windowSnapshot[prop]) {\n          // 记录变更，恢复环境\n          _this2.modifyPropsMap[prop] = window[prop];\n          window[prop] = _this2.windowSnapshot[prop];\n        }\n      });\n      if (process.env.NODE_ENV === 'development') {\n        console.info(\"[qiankun:sandbox] \".concat(this.name, \" origin window restore...\"), Object.keys(this.modifyPropsMap));\n      }\n      this.sandboxRunning = false;\n    }\n  }, {\n    key: \"patchDocument\",\n    value: function patchDocument() {}\n  }]);\n  return SnapshotSandbox;\n}();\nexport { SnapshotSandbox as default };","export var version = '2.10.16';","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _isFunction from \"lodash/isFunction\";\nimport _once from \"lodash/once\";\nimport _snakeCase from \"lodash/snakeCase\";\nimport _memoize from \"lodash/memoize\";\n/**\n * @author Kuitos\n * @since 2019-05-15\n */\nimport { version } from './version';\nexport function toArray(array) {\n  return Array.isArray(array) ? array : [array];\n}\nexport function sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n// Promise.then might be synchronized in Zone.js context, we need to use setTimeout instead to mock next tick.\n// Since zone.js will hijack the setTimeout callback, and notify angular to do change detection, so we need to use the  __zone_symbol__setTimeout to avoid this, see https://github.com/umijs/qiankun/issues/2384\nvar nextTick = typeof window.__zone_symbol__setTimeout === 'function' ? window.__zone_symbol__setTimeout : function (cb) {\n  return Promise.resolve().then(cb);\n};\nvar globalTaskPending = false;\n/**\n * Run a callback before next task executing, and the invocation is idempotent in every singular task\n * That means even we called nextTask multi times in one task, only the first callback will be pushed to nextTick to be invoked.\n * @param cb\n */\nexport function nextTask(cb) {\n  if (!globalTaskPending) {\n    globalTaskPending = true;\n    nextTick(function () {\n      cb();\n      globalTaskPending = false;\n    });\n  }\n}\nvar fnRegexCheckCacheMap = new WeakMap();\nexport function isConstructable(fn) {\n  // prototype methods might be changed while code running, so we need check it every time\n  var hasPrototypeMethods = fn.prototype && fn.prototype.constructor === fn && Object.getOwnPropertyNames(fn.prototype).length > 1;\n  if (hasPrototypeMethods) return true;\n  if (fnRegexCheckCacheMap.has(fn)) {\n    return fnRegexCheckCacheMap.get(fn);\n  }\n  /*\n    1. 有 prototype 并且 prototype 上有定义一系列非 constructor 属性\n    2. 函数名大写开头\n    3. class 函数\n    满足其一则可认定为构造函数\n   */\n  var constructable = hasPrototypeMethods;\n  if (!constructable) {\n    // fn.toString has a significant performance overhead, if hasPrototypeMethods check not passed, we will check the function string with regex\n    var fnString = fn.toString();\n    var constructableFunctionRegex = /^function\\b\\s[A-Z].*/;\n    var classRegex = /^class\\b/;\n    constructable = constructableFunctionRegex.test(fnString) || classRegex.test(fnString);\n  }\n  fnRegexCheckCacheMap.set(fn, constructable);\n  return constructable;\n}\nvar callableFnCacheMap = new WeakMap();\nexport function isCallable(fn) {\n  if (callableFnCacheMap.has(fn)) {\n    return true;\n  }\n  /**\n   * We can not use typeof to confirm it is function as in some safari version\n   * typeof document.all === 'undefined' // true\n   * typeof document.all === 'function' // true\n   */\n  var callable = typeof fn === 'function' && fn instanceof Function;\n  if (callable) {\n    callableFnCacheMap.set(fn, callable);\n  }\n  return callable;\n}\nvar frozenPropertyCacheMap = new WeakMap();\nexport function isPropertyFrozen(target, p) {\n  if (!target || !p) {\n    return false;\n  }\n  var targetPropertiesFromCache = frozenPropertyCacheMap.get(target) || {};\n  if (targetPropertiesFromCache[p]) {\n    return targetPropertiesFromCache[p];\n  }\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(target, p);\n  var frozen = Boolean(propertyDescriptor && propertyDescriptor.configurable === false && (propertyDescriptor.writable === false || propertyDescriptor.get && !propertyDescriptor.set));\n  targetPropertiesFromCache[p] = frozen;\n  frozenPropertyCacheMap.set(target, targetPropertiesFromCache);\n  return frozen;\n}\nvar boundedMap = new WeakMap();\nexport function isBoundedFunction(fn) {\n  if (boundedMap.has(fn)) {\n    return boundedMap.get(fn);\n  }\n  /*\n   indexOf is faster than startsWith\n   see https://jsperf.com/string-startswith/72\n   */\n  var bounded = fn.name.indexOf('bound ') === 0 && !fn.hasOwnProperty('prototype');\n  boundedMap.set(fn, bounded);\n  return bounded;\n}\nexport var isConstDestructAssignmentSupported = _memoize(function () {\n  try {\n    new Function('const { a } = { a: 1 }')();\n    return true;\n  } catch (e) {\n    return false;\n  }\n});\nexport var qiankunHeadTagName = 'qiankun-head';\nexport function getDefaultTplWrapper(name, sandboxOpts) {\n  return function (tpl) {\n    var tplWithSimulatedHead;\n    if (tpl.indexOf('<head>') !== -1) {\n      // We need to mock a head placeholder as native head element will be erased by browser in micro app\n      tplWithSimulatedHead = tpl.replace('<head>', \"<\".concat(qiankunHeadTagName, \">\")).replace('</head>', \"</\".concat(qiankunHeadTagName, \">\"));\n    } else {\n      // Some template might not be a standard html document, thus we need to add a simulated head tag for them\n      tplWithSimulatedHead = \"<\".concat(qiankunHeadTagName, \"></\").concat(qiankunHeadTagName, \">\").concat(tpl);\n    }\n    return \"<div id=\\\"\".concat(getWrapperId(name), \"\\\" data-name=\\\"\").concat(name, \"\\\" data-version=\\\"\").concat(version, \"\\\" data-sandbox-cfg=\").concat(JSON.stringify(sandboxOpts), \">\").concat(tplWithSimulatedHead, \"</div>\");\n  };\n}\nexport function getWrapperId(name) {\n  return \"__qiankun_microapp_wrapper_for_\".concat(_snakeCase(name), \"__\");\n}\nexport var nativeGlobal = new Function('return this')();\nexport var nativeDocument = new Function('return document')();\nvar getGlobalAppInstanceMap = _once(function () {\n  if (!nativeGlobal.hasOwnProperty('__app_instance_name_map__')) {\n    Object.defineProperty(nativeGlobal, '__app_instance_name_map__', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n  }\n  return nativeGlobal.__app_instance_name_map__;\n});\n/**\n * Get app instance name with the auto-increment approach\n * @param appName\n */\nexport var genAppInstanceIdByName = function genAppInstanceIdByName(appName) {\n  var globalAppInstanceMap = getGlobalAppInstanceMap();\n  if (!(appName in globalAppInstanceMap)) {\n    nativeGlobal.__app_instance_name_map__[appName] = 0;\n    return appName;\n  }\n  globalAppInstanceMap[appName]++;\n  return \"\".concat(appName, \"_\").concat(globalAppInstanceMap[appName]);\n};\n/** 校验子应用导出的 生命周期 对象是否正确 */\nexport function validateExportLifecycle(exports) {\n  var _ref = exports !== null && exports !== void 0 ? exports : {},\n    bootstrap = _ref.bootstrap,\n    mount = _ref.mount,\n    unmount = _ref.unmount;\n  return _isFunction(bootstrap) && _isFunction(mount) && _isFunction(unmount);\n}\nexport var Deferred = /*#__PURE__*/_createClass(function Deferred() {\n  var _this = this;\n  _classCallCheck(this, Deferred);\n  this.promise = void 0;\n  this.resolve = void 0;\n  this.reject = void 0;\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = resolve;\n    _this.reject = reject;\n  });\n});\nvar supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function' && typeof performance.getEntriesByName === 'function';\nexport function performanceGetEntriesByName(markName, type) {\n  var marks = null;\n  if (supportsUserTiming) {\n    marks = performance.getEntriesByName(markName, type);\n  }\n  return marks;\n}\nexport function performanceMark(markName) {\n  if (supportsUserTiming) {\n    performance.mark(markName);\n  }\n}\nexport function performanceMeasure(measureName, markName) {\n  if (supportsUserTiming && performance.getEntriesByName(markName, 'mark').length) {\n    performance.measure(measureName, markName);\n    performance.clearMarks(markName);\n    performance.clearMeasures(measureName);\n  }\n}\nexport function isEnableScopedCSS(sandbox) {\n  if (_typeof(sandbox) !== 'object') {\n    return false;\n  }\n  if (sandbox.strictStyleIsolation) {\n    return false;\n  }\n  return !!sandbox.experimentalStyleIsolation;\n}\n/**\n * copy from https://developer.mozilla.org/zh-CN/docs/Using_XPath\n * @param el\n * @param document\n */\nexport function getXPathForElement(el, document) {\n  // not support that if el not existed in document yet(such as it not append to document before it mounted)\n  if (!document.body.contains(el)) {\n    return undefined;\n  }\n  var xpath = '';\n  var pos;\n  var tmpEle;\n  var element = el;\n  while (element !== document.documentElement) {\n    pos = 0;\n    tmpEle = element;\n    while (tmpEle) {\n      if (tmpEle.nodeType === 1 && tmpEle.nodeName === element.nodeName) {\n        // If it is ELEMENT_NODE of the same name\n        pos += 1;\n      }\n      tmpEle = tmpEle.previousSibling;\n    }\n    xpath = \"*[name()='\".concat(element.nodeName, \"'][\").concat(pos, \"]/\").concat(xpath);\n    element = element.parentNode;\n  }\n  xpath = \"/*[name()='\".concat(document.documentElement.nodeName, \"']/\").concat(xpath);\n  xpath = xpath.replace(/\\/$/, '');\n  return xpath;\n}\nexport function getContainer(container) {\n  return typeof container === 'string' ? document.querySelector(container) : container;\n}\nexport function getContainerXPath(container) {\n  if (container) {\n    var containerElement = getContainer(container);\n    if (containerElement) {\n      return getXPathForElement(containerElement, document);\n    }\n  }\n  return undefined;\n}"],"names":["array2TruthyObject","array","reduce","acc","key","Object","create","cachedGlobalsInBrowser","concat","rawObjectDefineProperty","defineProperty","variableWhiteListInDev","window","__QIANKUN_DEVELOPMENT__","globalVariableWhiteList","accessingSpiedGlobals","overwrittenGlobals","cachedGlobals","Array","from","Set","cachedGlobalObjects","unscopables","useNativeWindowForBindingsProps","Map","activeSandboxCount","ProxySandbox","name","_this","this","globalContext","arguments","length","undefined","opts","updatedValueSet","document","type","proxy","sandboxRunning","latestSetProp","globalWhitelistPrevDescriptor","Proxy","speedy","_createFakeWindow","propertiesWithGetter","fakeWindow","getOwnPropertyNames","filter","p","descriptor","getOwnPropertyDescriptor","configurable","forEach","hasGetter","prototype","hasOwnProperty","call","writable","set","freeze","createFakeWindow","descriptorTargetMap","target","value","registerRunningApp","indexOf","enumerable","add","get","Symbol","parent","eval","actualTarget","has","boundTarget","_descriptor","ownKeys","Reflect","element","attributes","deleteProperty","delete","getPrototypeOf","_this2","keys","doc","currentRunningApp","iter","obj","callbackFn","prop","SnapshotSandbox","windowSnapshot","modifyPropsMap","Snapshot","version","toArray","isArray","nextTick","__zone_symbol__setTimeout","cb","Promise","resolve","then","globalTaskPending","nextTask","fnRegexCheckCacheMap","WeakMap","isConstructable","fn","hasPrototypeMethods","constructor","constructable","fnString","toString","test","callableFnCacheMap","isCallable","callable","Function","frozenPropertyCacheMap","isPropertyFrozen","targetPropertiesFromCache","propertyDescriptor","frozen","Boolean","boundedMap","isBoundedFunction","bounded","isConstDestructAssignmentSupported","e","qiankunHeadTagName","getDefaultTplWrapper","sandboxOpts","tpl","tplWithSimulatedHead","replace","getWrapperId","JSON","stringify","nativeGlobal","nativeDocument","getGlobalAppInstanceMap","__app_instance_name_map__","genAppInstanceIdByName","appName","globalAppInstanceMap","validateExportLifecycle","exports","_ref","bootstrap","mount","unmount","Deferred","promise","reject","isEnableScopedCSS","sandbox","strictStyleIsolation","experimentalStyleIsolation","getContainer","container","querySelector","performance","mark","clearMarks","measure","clearMeasures","getEntriesByName"],"sourceRoot":""}