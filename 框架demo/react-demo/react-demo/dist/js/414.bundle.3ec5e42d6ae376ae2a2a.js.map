{"version":3,"file":"js/414.bundle.3ec5e42d6ae376ae2a2a.js","mappings":"kZACA,U,IACA,UACA,W,uDACMA,EAAAA,SAAAA,GACJ,WAAYC,I,4FAAO,e,iKAAA,wDACXA,IADW,SAGnBC,OAAS,SAACC,GACR,EAAKC,MAAQD,GAJI,EAMnBE,cAAgB,WACd,EAAKD,MAAME,aAEXC,QAAQC,IAAI,EAAKJ,QATA,E,0WAajB,OACE,mCACE,wBAAC,UAAD,CAAKK,MAAOC,KAAKR,SACjB,mCACA,wBAAC,EAAAS,OAAD,CAAQC,KAAK,UAAUC,QAASH,KAAKL,eAArC,SAGA,wBAAC,EAAAS,QAAD,W,EArBFd,CAAee,EAAAA,QAAMC,W,UA0BZhB,G,iUC9Bf,W,2BACA,WAEQiB,EAAgBC,EAAAA,WAAhBD,MACFE,GADkBD,EAAAA,WAATE,KACTD,SAAAA,GACJ,WAAYlB,I,4FAAO,e,iKAAA,wDACXA,IADW,SAWnBoB,MAAQ,CACNC,KAAM,kBAZW,EAcnBC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,KAAME,EAAEE,OAAOC,SAhBA,EAmBnBrB,WAAa,WACX,EAAKmB,SAAS,CACZH,KAAM,MAnBJrB,EAAMQ,OAGRR,EAAMQ,MAAN,GALe,E,0WAyBjB,OACE,mCACE,wBAACQ,EAAD,CAAOW,MAAO,GAAIlB,KAAKW,MAAMC,MAC7B,wBAACL,EAAD,CAAOW,MAAO,GAAIlB,KAAKW,MAAMC,MAC7B,wBAAC,EAAAO,MAAD,CACEC,MAAO,CAAEC,MAAO,QAChBnB,KAAK,OACLoB,SAAUtB,KAAKa,aACfI,MAAOjB,KAAKW,MAAMC,Y,EAlCtBH,CAAYJ,EAAAA,QAAMC,Y,UAwCTG,G,gEC5Cf,I,IAAA,U,IACA,U,6DAEc,SAAUlB,GACtB,OACE,mCACE,wBAAC,UAAD","sources":["webpack://demo/./src/view/Dom/OnRef/components/Father.jsx","webpack://demo/./src/view/Dom/OnRef/components/Son.jsx","webpack://demo/./src/view/Dom/OnRef/index.jsx"],"sourcesContent":["// 父组件\r\nimport React from \"react\";\r\nimport Son from \"./Son\";\r\nimport { Button, Divider } from \"antd\";\r\nclass Father extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  sonRef = (ref) => {\r\n    this.child = ref; // 在这里拿到子组件的实例\r\n  };\r\n  clearSonInput = () => {\r\n    this.child.clearInput();\r\n    // h获取子组件的属性\r\n    console.log(this.child);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Son onRef={this.sonRef} />\r\n        <br/>\r\n        <Button type=\"primary\" onClick={this.clearSonInput}>\r\n          清空子组件\r\n        </Button>\r\n        <Divider />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Father;\r\n","import React from \"react\";\r\nimport { Typography, Input } from \"antd\";\r\n\r\nconst { Title, Text } = Typography;\r\nclass Son extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.onRef) {\r\n      // 如果接收到onRef方法，则调用该方法并传入子组件this指针\r\n      // 子组件this指针被挂载到父组件this.child上\r\n      props.onRef(this); //也可以在componentDidMount使用\r\n    }\r\n  }\r\n  // componentDidMount() {\r\n  //   this.props.onRef(this) // 在这将子组件的实例传递给父组件this.props.onRef()方法，函数组件不可用，它没有实例\r\n  // }\r\n  state = {\r\n    info: \"父组件获取子组件的方法和属性\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      info: e.target.value,\r\n    });\r\n  };\r\n  clearInput = () => {\r\n    this.setState({\r\n      info: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title level={4}>{this.state.info}</Title>\r\n        <Title level={4}>{this.state.info}</Title>\r\n        <Input\r\n          style={{ width: \"80px\" }}\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.state.info}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Son;\r\n","import React from \"react\";\nimport Father from \"./components/Father\";\n\nconst OnRef = function (props) {\n  return (\n    <div>\n      <Father></Father>\n    </div>\n  );\n};\nexport default OnRef;\n"],"names":["Father","props","sonRef","ref","child","clearSonInput","clearInput","console","log","onRef","this","Button","type","onClick","Divider","React","Component","Title","Typography","Son","Text","state","info","handleChange","e","setState","target","value","level","Input","style","width","onChange"],"sourceRoot":""}