{"version":3,"file":"js/481.bundle.daa3c3e8a80ec0008a9c.js","mappings":"0YAAA,UACA,WACA,W,4DAEQA,EAAUC,EAAAA,WAAVD,MACFE,EAAAA,SAAAA,GACJ,WAAYC,I,4FAAO,e,iKAAA,wDACXA,IADW,SAQnBC,MAAQ,CACNC,OAAQ,EACRC,QAAS,EACTC,MAAM,GARN,EAAKC,YAAc,EACnB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,GACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,GACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,GANH,E,qXAaC,WAClBG,KAAKC,SAAS,CAAET,OAAQ,IACxBU,QAAQC,IAAIH,KAAKT,MAAMC,QACvBQ,KAAKC,SAAS,CAAET,OAAQ,IAAK,WAC3BU,QAAQC,IAAI,EAAKZ,MAAMC,a,qCAIzBU,QAAQC,IAAI,OAEZH,KAAKC,UAAS,SAACG,EAAWd,GAAZ,MAAuB,CACnCG,QAASW,EAAUX,QAAU,MAE/BO,KAAKC,UAAS,SAACG,EAAWd,GAAZ,MAAuB,CACnCG,QAASW,EAAUX,QAAU,Q,qCAIlB,WAEbY,YAAW,WAET,EAAKJ,UAAS,SAACG,EAAWd,GAAZ,MAAuB,CACnCG,QAASW,EAAUX,QAAU,MAE/B,EAAKQ,UAAS,SAACG,EAAWd,GAAZ,MAAuB,CACnCG,QAASW,EAAUX,QAAU,QAG9B,K,qCAEU,WAEbY,YACE,IAAAC,0BAAwB,WACtB,EAAKL,UAAS,SAACG,EAAWd,GAAZ,MAAuB,CACnCG,QAASW,EAAUX,QAAU,MAE/B,EAAKQ,UAAS,SAACG,EAAWd,GAAZ,MAAuB,CACnCG,QAASW,EAAUX,QAAU,SAGjC,K,+BAIF,OACE,mCACE,mCACE,wBAACN,EAAD,CAAOoB,MAAO,GAAd,aAEF,wBAAC,EAAAC,QAAD,MACA,wBAACrB,EAAD,CAAOoB,MAAO,GAAd,mBACA,mCACE,sCAAMP,KAAKT,MAAME,QAAjB,KACA,wBAAC,EAAAgB,OAAD,CAAQC,QAASV,KAAKJ,cAAtB,qBACA,wBAAC,EAAAa,OAAD,CAAQC,QAASV,KAAKF,cAAtB,2BAGA,wBAAC,EAAAW,OAAD,CAAQC,QAASV,KAAKD,cAAtB,iF,EAzEJV,CAAmBsB,EAAAA,QAAMC,W,UAmFhBvB","sources":["webpack://demo/./src/view/Hooks/ClassHooks.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Typography, Divider } from \"antd\";\r\nimport ReactDOM, { unstable_batchedUpdates } from \"react-dom\";\r\n\r\nconst { Title } = Typography;\r\nclass ClassHooks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // 记录 render 的执行次数\r\n    this.renderCount = 0;\r\n    this.handleClick1 = this.handleClick1.bind(this);\r\n    this.handleClick2 = this.handleClick2.bind(this);\r\n    this.handleClick3 = this.handleClick3.bind(this);\r\n  }\r\n  state = {\r\n    number: 1,\r\n    counter: 1,\r\n    flag: false,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ number: 3 });\r\n    console.log(this.state.number);\r\n    this.setState({ number: 4 }, () => {\r\n      console.log(this.state.number);\r\n    });\r\n  }\r\n  handleClick1() {\r\n    console.log(11111);\r\n    //同一个点击事件中有两个状态更新，React 总是将它们分批处理到一个重新渲染中\r\n    this.setState((prevState, props) => ({\r\n      counter: prevState.counter + 1,\r\n    })); // 不重新渲染\r\n    this.setState((prevState, props) => ({\r\n      counter: prevState.counter + 1,\r\n    })); // 不重新渲染\r\n    // React 只会在最后重新渲染一次（这是批处理！）\r\n  }\r\n  handleClick2() {\r\n    // 模拟一个异步操作，真实业务里面可能是网络请求等\r\n    setTimeout(() => {\r\n      //同一个点击事件中有两个状态更新，React 总是将它们分批处理到一个重新渲染中\r\n      this.setState((prevState, props) => ({\r\n        counter: prevState.counter + 1,\r\n      })); // 不重新渲染\r\n      this.setState((prevState, props) => ({\r\n        counter: prevState.counter + 1,\r\n      })); // 不重新渲染\r\n      // React 只会在最后重新渲染一次（这是批处理！）\r\n    }, 0);\r\n  }\r\n  handleClick3() {\r\n    // 模拟一个异步操作，真实业务里面可能是网络请求等\r\n    setTimeout(\r\n      unstable_batchedUpdates(() => {\r\n        this.setState((prevState, props) => ({\r\n          counter: prevState.counter + 1,\r\n        })); // 不重新渲染\r\n        this.setState((prevState, props) => ({\r\n          counter: prevState.counter + 1,\r\n        })); // 不重新渲染\r\n      }),\r\n      0\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Title level={2}>setstate</Title>\r\n        </div>\r\n        <Divider />\r\n        <Title level={4}>批量处理batchUpdate</Title>\r\n        <div>\r\n          <h1> {this.state.counter} </h1>\r\n          <Button onClick={this.handleClick1}> 同步的 setState 两次 </Button>\r\n          <Button onClick={this.handleClick2}>\r\n            在一个异步的事件循环里 setState 两次\r\n          </Button>\r\n          <Button onClick={this.handleClick3}>\r\n            在一个异步的事件循环里 setState 两次, 但是使用\r\n            ReactDOM.unstable_batchedUpdates 强制 batch\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassHooks;\r\n"],"names":["Title","Typography","ClassHooks","props","state","number","counter","flag","renderCount","handleClick1","bind","handleClick2","handleClick3","this","setState","console","log","prevState","setTimeout","unstable_batchedUpdates","level","Divider","Button","onClick","React","Component"],"sourceRoot":""}