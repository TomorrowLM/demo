{"version":3,"file":"js/771.bundle.3ec5e42d6ae376ae2a2a.js","mappings":"iJAAA,WACA,UAEA,SAASA,IAAa,M,2YAAA,EACS,IAAAC,UAAS,GADlB,GACbC,EADa,KACHC,EADG,KAIpB,MAAO,CACLD,SAAAA,EACAE,UAJgB,kBAAMD,EAASD,EAAW,IAK1CG,UAJgB,kBAAMF,EAASD,EAAW,KAO9CF,EAAWM,UAAY,a,WACR,IAAAC,aAAYP,I,+DCXFK,EAAAA,UAAA,WACvB,MAAO,CAAEG,KAAM,cAEQJ,EAAAA,UAAA,WACvB,MAAO,CAAEI,KAAM,e,iECPjB,eACA,W,OACA,WACA,W,KACA,U,EAEA,WACA,W,IACA,UACA,W,uDAEQC,EAAgBC,EAAAA,WAAhBD,MAAOE,EAASD,EAAAA,WAATC,K,WA+DA,IAAAC,UAbf,SAAyBC,GACvB,MAAO,CACLC,MAAOD,EAAME,QAAQD,MACrBE,KAAMH,EAAMI,aAGhB,SAA4BC,GAC1B,MAAO,CACLC,YAAa,kBAAMD,GAAS,IAAAb,eAC5Be,YAAa,kBAAMF,GAAS,IAAAd,eAC5BiB,YAAa,SAACC,GAAD,OAAYJ,EAASI,OAGvB,EA9DD,SAAUC,GAAO,IACrBT,EAAuDS,EAAvDT,MAAOK,EAAgDI,EAAhDJ,YAAaC,EAAmCG,EAAnCH,YAAaJ,EAAsBO,EAAtBP,KADZ,GACkCO,EAAhBF,aAC9B,IAAAG,gBACK,IAAAC,cAAY,SAACZ,GAAD,OAAWA,EAAME,QAAQD,UAEhB,gBAAnCZ,EALqB,EAKrBA,SAaR,OAlB6B,EAKXG,UALW,EAKAD,WAC7B,IAAAsB,YAAU,WAKRC,EAAAA,QAAQC,IAAI,UAAUC,MAAK,SAACC,IACX,IAAAb,UAASa,EAAIC,KAAKA,MACjCC,QAAQC,IAAIH,EAAIC,KAAKA,WAItB,IAED,mCACE,wBAACtB,EAAD,CAAOyB,MAAO,GAAd,YACA,mCACE,wBAAC,EAAAC,OAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASnB,GAArD,aAGA,wBAAC,EAAAgB,OAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAASlB,EACTmB,MAAO,CAAEC,WAAY,SAJvB,aAQA,6BAAGD,MAAO,CAAEE,SAAU,SAAW3B,IAEnC,wBAAC,EAAA4B,QAAD,MACA,wBAACjC,EAAD,CAAOyB,MAAO,GAAd,sBACA,mCACE,wBAACvB,EAAD,CAAMH,KAAK,WAAWQ,EAAOA,EAAK2B,KAAO,aAE3C,wBAAC,EAAAD,QAAD,MACA,wBAACjC,EAAD,CAAOyB,MAAO,GAAd,gBACA,mCACE,wBAACvB,EAAD,CAAMH,KAAK,WAAWN","sources":["webpack://demo/./src/hox/CreateModal.jsx","webpack://demo/./src/store/actions/counter.js","webpack://demo/./src/view/Store/Store/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { createModel } from \"hox\";\r\n\r\nfunction useCounter() {\r\n  const [countHox, setCount] = useState(0);\r\n  const decrement = () => setCount(countHox - 1);\r\n  const increment = () => setCount(countHox + 1);\r\n  return {\r\n    countHox,\r\n    decrement,\r\n    increment\r\n  };\r\n}\r\nuseCounter.namespace = 'useCounter' // 这里需要给每一个 model 都添加命名空间标识\r\nexport default createModel(useCounter);","/**\n * action:数据更新的指令，它会告诉reduce如何去处理数据\n */\nexport const increment = () => {\n  return { type: \"INCREMENT\" };\n};\nexport const decrement = () => {\n  return { type: \"DECREMENT\" };\n};\n","import { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement } from \"../../../store/actions/counter\";\nimport store from \"../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport request from \"../../../api/request\";\nimport { userInfo } from \"../../../store/actions/userInfo\";\nimport useCounterModel from \"../../../hox/CreateModal\";\nimport { Typography, Divider } from \"antd\";\n\nconst { Title, Text } = Typography;\nconst Store = function (props) {\n  const { count, onincrement, ondecrement, info, getuserInfo } = props;\n  const dispatch = useDispatch();\n  const countSelector = useSelector((state) => state.counter.count);\n  //获取hox\n  const { countHox, increment, decrement } = useCounterModel();\n  useEffect(() => {\n    // console.log(store, store.getState(), countSelector);\n    // onincrement();\n    // dispatch(increment())\n    // store.dispatch(increment())\n    request.get(\"/users\").then((res) => {\n      const action = userInfo(res.data.data);\n      console.log(res.data.data);\n      // getuserInfo(action);\n      // store.dispatch(action);\n    });\n  }, []);\n  return (\n    <div>\n      <Title level={4}>couter例子</Title>\n      <div>\n        <Button variant=\"contained\" color=\"primary\" onClick={onincrement}>\n          increment\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={ondecrement}\n          style={{ marginLeft: \"30px\" }}\n        >\n          decrement\n        </Button>\n        <p style={{ fontSize: \"30px\" }}>{count}</p>\n      </div>\n      <Divider />\n      <Title level={4}>获取user信息，并存储到store</Title>\n      <div>\n        <Text type=\"success\">{info ? info.name : \"undefine\"}</Text>\n      </div>\n      <Divider />\n      <Title level={4}>测试hox修改后显示的值</Title>\n      <div>\n        <Text type=\"success\">{countHox}</Text>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.counter.count,\n    info: state.userInfo,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onincrement: () => dispatch(increment()),\n    ondecrement: () => dispatch(decrement()),\n    getuserInfo: (action) => dispatch(action),\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Store); // 挂载到props\n"],"names":["useCounter","useState","countHox","setCount","decrement","increment","namespace","createModel","type","Title","Typography","Text","connect","state","count","counter","info","userInfo","dispatch","onincrement","ondecrement","getuserInfo","action","props","useDispatch","useSelector","useEffect","request","get","then","res","data","console","log","level","Button","variant","color","onClick","style","marginLeft","fontSize","Divider","name"],"sourceRoot":""}