{"version":3,"file":"js/225.bundle.6bbbad9c8e2fd7d81b79.js","mappings":"gKAAA,I,EAAA,W,KACA,W,2BAIyBA,EAAAA,UAAA,WAAM,OAEF,eAAZC,GAFc,EAErBC,MAFqB,EAEdD,SA8Bf,MAAO,CACLE,eA1BoB,IAAAC,cAAY,SAACC,GACjC,OAAOJ,EAAQI,KACd,IAyBDC,UApBe,IAAAF,cAAY,SAACG,EAAOC,EAAMC,MAExC,IAmBDC,cAdmB,IAAAN,cAAY,SAACO,MAE/B,IAaDC,iBARsB,IAAAR,cAAY,SAACC,EAAYG,MAE9C,O,gPCnCL,W,2BACA,WACA,W,UAemB,SAACK,GAA0B,IAApBC,EAAoB,uDAAb,SACzBC,EAAS,SAAAC,GAAS,IACdb,GAAkB,IAAAH,aAAlBG,cACAE,EAAoCW,EAApCX,WAAYY,EAAwBD,EAAxBC,KAFE,GAEsBD,EAAlBE,KAAkBF,EAAZG,QAEGhB,EAAcE,EAAYS,IAAS,IAA9DM,EAJc,EAIdA,YAAaC,EAJC,EAIDA,UACjBC,EAAYN,EAWhB,OAVAO,QAAQC,IAAIR,GAULI,EAAc,wBAACP,EAAD,KAAUS,EAThB,WACb,GAAkB,IAAdD,EACF,MAAO,CACLF,QAAS,WACPM,EAAAA,QAAQC,KAAK,YAKyBC,IAAWV,GAAe,MAG1E,OAAOF","sources":["webpack://demo/./src/hooks/useAccess.js","webpack://demo/./src/view/Access/components/index.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport usePermissionModel from '../hox/access';\r\n\r\nconst type = ['menu', 'button']\r\n\r\nexport const useAccess = () => {\r\n  // 获取菜单和按钮的标识\r\n  const { menus, buttons } = usePermissionModel();\r\n\r\n  /**\r\n   * 根据权限标识获取权限\r\n   */\r\n  const getPermission = useCallback((permission, type = 'button') => {\r\n    return buttons[permission]\r\n  }, []);\r\n\r\n  /**\r\n   * 根据路由地址获取权限\r\n   */\r\n  const getRoute = useCallback((route, data, isFullMatch) => {\r\n\r\n  }, []);\r\n\r\n  /**\r\n   * 获取展示路由数据\r\n   */\r\n  const getChildMenu = useCallback((parentPermission) => {\r\n\r\n  }, []);\r\n\r\n  /**\r\n   * 获取最后可跳转的路由地址\r\n   */\r\n  const getLastHopRoute = useCallback((permission, data) => {\r\n\r\n  }, []);\r\n\r\n  return {\r\n    getPermission,\r\n    getRoute,\r\n    getChildMenu,\r\n    getLastHopRoute\r\n  };\r\n};","import React, { FC } from 'react';\r\nimport { useAccess } from '../../../hooks/useAccess';\r\nimport { message } from 'antd';\r\n\r\n/**\r\n * 权限高阶组件，使用示例：\r\n * \r\n * import WithAccess from '@components/WithAccess';\r\n * \r\n * const WithAccessBtn = WithAccess(你的组件, 可选'button' | 'menu' 默认为button);\r\n * \r\n * <WithAccessBtn permission='permission' />\r\n * \r\n * @param Comp 组件\r\n * @param type 鉴权类型 按钮：button，菜单：menu\r\n * @returns \r\n */\r\nconst WithAccess = (Comp, type = 'button') => {\r\n  const Access = props => {\r\n    const { getPermission } = useAccess();\r\n    const { permission, name, icon, onClick } = props;\r\n    //showVisible是否展示, available是否有权限\r\n    const { showVisible, available } = getPermission(permission, type) || {};\r\n    let initProps = props\r\n    console.log(props);\r\n    const config = () => {\r\n      if (available === 0) {\r\n        return {\r\n          onClick: () => {\r\n            message.info('按钮没有权限')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return showVisible ? <Comp {...initProps} {...config()}>{name}</Comp> : null;\r\n  }\r\n\r\n  return Access;\r\n}\r\n\r\nexport default WithAccess;"],"names":["useAccess","buttons","menus","getPermission","useCallback","permission","getRoute","route","data","isFullMatch","getChildMenu","parentPermission","getLastHopRoute","Comp","type","Access","props","name","icon","onClick","showVisible","available","initProps","console","log","message","info","config"],"sourceRoot":""}