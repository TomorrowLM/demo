{"version":3,"file":"js/215.bundle.daa3c3e8a80ec0008a9c.js","mappings":"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","sources":["webpack://demo/./src/view/Antd/Form/index.jsx"],"sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Select,\r\n  message,\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Space,\r\n} from \"antd\";\r\nimport { useRequest, useSetState, useReactive, useBoolean } from \"ahooks\";\r\n\r\nconst TroubleModal = (props) => {\r\n  const [visible, { toggle, setTrue, setFalse }] = useBoolean(false);\r\n  const [form] = Form.useForm();\r\n  const initData = {\r\n    0: {\r\n      dayLimit: \"\",\r\n      timeLimit: \"\",\r\n      type: false,\r\n    },\r\n    1: {\r\n      dayLimit: \"\",\r\n      timeLimit: \"\",\r\n      type: false,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      form.setFieldsValue({\r\n        ...initData,\r\n      });\r\n    }, 10);\r\n  }, []);\r\n\r\n  const confirm = (e) => {\r\n    console.log(e);\r\n    let isEmpty = false;\r\n    let NewArr = Object.values(e).filter((value, index) => {\r\n      if (value.type) {\r\n        if (!value.dayLimit || !value.timeLimit) {\r\n          isEmpty = true;\r\n        }\r\n      }\r\n      const NewType = value.type;\r\n      value.type = index;\r\n      return NewType;\r\n    });\r\n    if (isEmpty) {\r\n      message.info(\"必填校验\");\r\n      return;\r\n    }\r\n    message.info(\"成功\");\r\n  };\r\n  const replaceNum = (e, type, name) => {\r\n    // let length = e.replace(/\\D/g, '').length;\r\n    if (Number(e.target.value) === 0) {\r\n      return;\r\n    } else {\r\n      form.setFieldsValue({\r\n        [type]: { [name]: e.target.value.replace(/^0*/g, \"\") },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        forceRender\r\n        visible={visible}\r\n        // keyboard={false}\r\n        // maskClosable={false}\r\n        onCancel={setFalse}\r\n        getContainer={false}\r\n        width={600}\r\n        title=\"投放设置\"\r\n        okButtonProps={{ htmlType: \"submit\", form: \"editForm\" }}\r\n      >\r\n        <div>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <p style={{ marginBottom: \"10px\" }}>\r\n              满足以下任一条件，则不重复投放问卷\r\n            </p>\r\n          </div>\r\n          <Form\r\n            id=\"editForm\"\r\n            onFinish={confirm}\r\n            initialValues={{ ...initData }}\r\n            form={form}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"baseline\",\r\n                height: \"56px\",\r\n              }}\r\n            >\r\n              <Space style={{ display: \"flex\", alignItems: \"baseline\" }}>\r\n                <Form.Item\r\n                  name={[\"0\", \"type\"]}\r\n                  valuePropName=\"checked\"\r\n                  dependencies={[\r\n                    [\"0\", \"dayLimit\"],\r\n                    [\"0\", \"timeLimit\"],\r\n                  ]}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (\r\n                          (value &&\r\n                            (!getFieldValue([\"0\", \"dayLimit\"]) ||\r\n                              !getFieldValue([\"0\", \"timeLimit\"]))) ||\r\n                          (!value &&\r\n                            (getFieldValue([\"0\", \"dayLimit\"]) ||\r\n                              getFieldValue([\"0\", \"timeLimit\"])))\r\n                        ) {\r\n                          return Promise.reject(new Error(\"必填校验\"));\r\n                        }\r\n                        return Promise.resolve();\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Checkbox></Checkbox>\r\n                </Form.Item>\r\n                <span>同一用户</span>\r\n                <Form.Item\r\n                  name={[\"0\", \"dayLimit\"]}\r\n                  rules={[\r\n                    {\r\n                      pattern: /(^[0-9]{2,}\\d*$)|(^[1-9]\\d*$)/,\r\n                      message: \" 只能输入正整数！\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: 120 }}\r\n                    onBlur={(e) => replaceNum(e, \"0\", \"dayLimit\")}\r\n                  ></Input>\r\n                </Form.Item>\r\n                <span>天内,被投放</span>\r\n                <Form.Item\r\n                  name={[\"0\", \"timeLimit\"]}\r\n                  rules={[\r\n                    {\r\n                      pattern: /(^[0-9]{2,}\\d*$)|(^[1-9]\\d*$)/,\r\n                      message: \" 只能输入正整数！\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: 120 }}\r\n                    onBlur={(e) => replaceNum(e, \"0\", \"timeLimit\")}\r\n                  ></Input>\r\n                </Form.Item>\r\n                <span>份问卷</span>\r\n              </Space>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"baseline\",\r\n                height: \"56px\",\r\n              }}\r\n            >\r\n              <Space style={{ display: \"flex\", alignItems: \"baseline\" }}>\r\n                <Form.Item\r\n                  name={[\"1\", \"type\"]}\r\n                  valuePropName=\"checked\"\r\n                  dependencies={[\r\n                    [\"1\", \"dayLimit\"],\r\n                    [\"1\", \"timeLimit\"],\r\n                  ]}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (\r\n                          (value &&\r\n                            (!getFieldValue([\"1\", \"dayLimit\"]) ||\r\n                              !getFieldValue([\"1\", \"timeLimit\"]))) ||\r\n                          (!value &&\r\n                            (getFieldValue([\"1\", \"dayLimit\"]) ||\r\n                              getFieldValue([\"1\", \"timeLimit\"])))\r\n                        ) {\r\n                          return Promise.reject(new Error(\"必填校验\"));\r\n                        }\r\n                        return Promise.resolve();\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Checkbox></Checkbox>\r\n                </Form.Item>\r\n                <span>同一用户</span>\r\n                <Form.Item\r\n                  name={[\"1\", \"dayLimit\"]}\r\n                  rules={[\r\n                    {\r\n                      pattern: /(^[0-9]{2,}\\d*$)|(^[1-9]\\d*$)/,\r\n                      message: \" 只能输入正整数！\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: 120 }}\r\n                    onBlur={(e) => replaceNum(e, \"1\", \"dayLimit\")}\r\n                  ></Input>\r\n                </Form.Item>\r\n                <span>天内,被投放</span>\r\n                <Form.Item\r\n                  name={[\"1\", \"timeLimit\"]}\r\n                  rules={[\r\n                    {\r\n                      pattern: /(^[0-9]{2,}\\d*$)|(^[1-9]\\d*$)/,\r\n                      message: \" 只能输入正整数！\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: 120 }}\r\n                    onBlur={(e) => replaceNum(e, \"1\", \"timeLimit\")}\r\n                  ></Input>\r\n                </Form.Item>\r\n                <span>份问卷</span>\r\n              </Space>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n      <Button onClick={setTrue}>form+modal+dependencies</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TroubleModal;\r\n"],"names":["props","useBoolean","visible","setTrue","toggle","setFalse","Form","useForm","form","initData","dayLimit","timeLimit","type","useEffect","setTimeout","setFieldsValue","replaceNum","e","name","Number","target","value","replace","Modal","forceRender","onCancel","getContainer","width","title","okButtonProps","htmlType","style","display","justifyContent","marginBottom","id","onFinish","console","log","isEmpty","Object","values","filter","index","NewType","message","info","initialValues","alignItems","height","Space","Item","valuePropName","dependencies","rules","getFieldValue","validator","_","Promise","reject","Error","resolve","Checkbox","pattern","Input","onBlur","Button","onClick"],"sourceRoot":""}