{"version":3,"file":"js/250.bundle.daa3c3e8a80ec0008a9c.js","mappings":"ikBAAA,W,oCACA,WAUA,UAEQA,EAAWC,EAAAA,OAAXD,OACFE,EAAgB,CAAEC,WAAW,EAAMC,WAAY,OACxCC,EAAyBA,EAAAA,uBAAA,CACpC,CACEC,MAAO,WACPC,MAAO,YAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,eACPC,MAAO,iB,UAGS,WAAM,OACyB,IAAAC,aAAW,GADpC,SACjBC,EADiB,YACNC,EADM,EACNA,OAAQC,EADF,EACEA,QAASC,EADX,EACWA,SADX,EAETC,EAAAA,KAAKC,UAAbC,EAFiB,UAGlBC,GAAU,IAAAC,UAHQ,GAKE,IAAAC,aAAY,CACpCC,gBAAiBd,EACjBe,mBAAoB,KAPE,SAKjBC,EALiB,cASQ,IAAAC,WAAS,IATjB,SASjBC,EATiB,KASPC,EATO,QAUoB,IAAAF,UAAS,IAV7B,SAUjBG,EAViB,KAUDC,EAVC,KAsClBC,EACJ,wBAAC,EAAAd,KAAKe,KAAN,CAAWC,KAAK,cAAcC,SAAA,GAC5B,wBAAC,EAAA7B,OAAD,CACE8B,YAAA,EACAC,YAAY,aACZC,UAAU,sBACVC,KAAK,SACLC,YAAA,EACAC,SAAU,SAAC7B,GAAD,OA5BM,SAACA,GACrBmB,EAAkBnB,GA2BO8B,CAAc9B,IACnC+B,SAAU,SAAC/B,GAAD,OApCM,SAACA,GACjBA,GACFmB,EAAkBnB,GAEpBiB,GAAY,GAgCae,CAAchC,IACnCiC,OAAQ,SAACjC,GAAD,OAzBRgB,IACG,mCAAmCkB,KAAKhB,GAG3CJ,EAAMF,gBAAgBuB,KAAK,CACzBnC,MAAOkB,EACPnB,MAAOmB,IAJTkB,EAAAA,QAAQC,KAAK,KAQb,mCAAmCH,KAAKhB,IAC1CT,EAAQ6B,QAAQC,eAAe,CAAEC,YAAatB,SAEhDD,GAAY,KAcPH,EAAMF,gBAAgB6B,KAAI,SAACC,GAE1B,OADAC,QAAQC,IAAIF,GACL,wBAACjD,EAAD,CAAQoD,IAAKH,EAAK3C,OAAQ2C,EAAK1C,YAM9C,OACE,mCACE,wBAAC,EAAA8C,MAAD,CACEC,aAAA,EACA7C,QAASA,EACT8C,SAAU3C,EACV4C,cAAc,EACdC,MAAO,IACPC,MAAM,OACNC,cAAe,CAAEC,SAAU,SAAU7C,KAAM,aAE3C,mCACE,wBAAC,EAAAF,KAAD,CACEgD,GAAG,WACHC,SAAU,kBAAMpD,KAChBR,cAAeA,EACfa,KAAMA,EACNgD,IAAK/C,GAEL,wBAAC,EAAAH,KAAKe,KAAN,CACEC,KAAK,cACLvB,MAAM,OACN0D,MAAO,CAAC,CAAEC,UAAU,EAAMtB,QAAS,aAEnC,wBAAC,EAAAuB,MAAD,CACEjC,UAAU,eACVkC,WAAYxC,EACZO,KAAK,QACLF,YAAY,gBAMtB,wBAAC,EAAAoC,OAAD,CAAQC,QAAS1D,GAAjB","sources":["webpack://demo/./src/view/Antd/Select/index.jsx"],"sourcesContent":["import React, { FC, useState, useRef } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Select,\r\n  message,\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Space,\r\n} from \"antd\";\r\nimport { useRequest, useSetState, useReactive, useBoolean } from \"ahooks\";\r\n\r\nconst { Option } = Select;\r\nconst initialValues = { isDefault: true, mailboxSSL: \"465\" };\r\nexport const initialMailboxTypeList = [\r\n  {\r\n    label: \"@163.com\",\r\n    value: \"@163.com\",\r\n  },\r\n  {\r\n    label: \"@126.com\",\r\n    value: \"@126.com\",\r\n  },\r\n  {\r\n    label: \"@yeah.net\",\r\n    value: \"@yeah.net\",\r\n  },\r\n  {\r\n    label: \"@qq.com\",\r\n    value: \"@qq.com\",\r\n  },\r\n  {\r\n    label: \"@sina.com\",\r\n    value: \"@sina.com\",\r\n  },\r\n  {\r\n    label: \"@189.cn\",\r\n    value: \"@189.cn\",\r\n  },\r\n  {\r\n    label: \"@sohu.com\",\r\n    value: \"@sohu.com\",\r\n  },\r\n  {\r\n    label: \"@aliyun.com\",\r\n    value: \"@aliyun.com\",\r\n  },\r\n  {\r\n    label: \"@cempro.cn\",\r\n    value: \"@cempro.cn\",\r\n  },\r\n  {\r\n    label: \"@21cn.com\",\r\n    value: \"@21cn.com\",\r\n  },\r\n  {\r\n    label: \"@data100.com\",\r\n    value: \"@data100.com\",\r\n  },\r\n];\r\nconst SelectModal = () => {\r\n  const [visible, { toggle, setTrue, setFalse }] = useBoolean(false);\r\n  const [form] = Form.useForm();\r\n  const formRef = useRef();\r\n\r\n  const [state, setState] = useSetState({\r\n    mailboxTypeList: initialMailboxTypeList,\r\n    controlMailBoxType: \"\",\r\n  });\r\n  const [isChange, setIsChange] = useState(false);\r\n  const [newMailboxType, setNewMailboxType] = useState(\"\");\r\n  const searchMailBox = (value) => {\r\n    if (value) {\r\n      setNewMailboxType(value);\r\n    }\r\n    setIsChange(true);\r\n  };\r\n\r\n  const changeMailBox = (value) => {\r\n    setNewMailboxType(value);\r\n  };\r\n\r\n  const blurMailBox = (value) => {\r\n    if (isChange) {\r\n      if (!/^@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/.test(newMailboxType)) {\r\n        message.info(\"\");\r\n      } else {\r\n        state.mailboxTypeList.push({\r\n          value: newMailboxType,\r\n          label: newMailboxType,\r\n        });\r\n      }\r\n    }\r\n    if (/^@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/.test(newMailboxType)) {\r\n      formRef.current.setFieldsValue({ mailboxType: newMailboxType });\r\n    }\r\n    setIsChange(false);\r\n  };\r\n  const prefixSelector = (\r\n    <Form.Item name=\"mailboxType\" noStyle>\r\n      <Select\r\n        allowClear\r\n        placeholder=\"请选择或输入邮箱尾缀\"\r\n        className=\"mailbox_type_select\"\r\n        size=\"middle\"\r\n        showSearch\r\n        onChange={(value) => changeMailBox(value)}\r\n        onSearch={(value) => searchMailBox(value)}\r\n        onBlur={(value) => blurMailBox(value)}\r\n      >\r\n        {state.mailboxTypeList.map((item) => {\r\n          console.log(item);\r\n          return <Option key={item.label}>{item.value}</Option>;\r\n        })}\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        forceRender\r\n        visible={visible}\r\n        onCancel={setFalse}\r\n        getContainer={false}\r\n        width={600}\r\n        title=\"投放设置\"\r\n        okButtonProps={{ htmlType: \"submit\", form: \"editForm\" }}\r\n      >\r\n        <div>\r\n          <Form\r\n            id=\"editForm\"\r\n            onFinish={() => toggle()}\r\n            initialValues={initialValues}\r\n            form={form}\r\n            ref={formRef}\r\n          >\r\n            <Form.Item\r\n              name=\"mailboxName\"\r\n              label=\"邮箱账号\"\r\n              rules={[{ required: true, message: \"请输入邮箱账号\" }]}\r\n            >\r\n              <Input\r\n                className=\"mailbox_name\"\r\n                addonAfter={prefixSelector}\r\n                size=\"large\"\r\n                placeholder=\"请输入邮箱账号\"\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n      <Button onClick={setTrue}>form+modal+select</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectModal;\r\n"],"names":["Option","Select","initialValues","isDefault","mailboxSSL","initialMailboxTypeList","label","value","useBoolean","visible","toggle","setTrue","setFalse","Form","useForm","form","formRef","useRef","useSetState","mailboxTypeList","controlMailBoxType","state","useState","isChange","setIsChange","newMailboxType","setNewMailboxType","prefixSelector","Item","name","noStyle","allowClear","placeholder","className","size","showSearch","onChange","changeMailBox","onSearch","searchMailBox","onBlur","test","push","message","info","current","setFieldsValue","mailboxType","map","item","console","log","key","Modal","forceRender","onCancel","getContainer","width","title","okButtonProps","htmlType","id","onFinish","ref","rules","required","Input","addonAfter","Button","onClick"],"sourceRoot":""}