import b3request from './base'

export const getToken = data => b3request.post('/api/v2/login', data)
export const getUserRole = userId => b3request.get(`/api/v2/users/${userId}?isBcId=1`)
export const getAdvQtyState = () => b3request.get('/api/v2/store-configs/switch-status?key=interval_quantity')
export const getCompany = customerId => b3request.get(`/api/v2/customers/${customerId}/companies`)
export const getProductsBySku = params => b3request.get('/api/v2/catalogs/quickProduct', { params })
export const getAdvQtyBySkus = params => b3request.get('/api/v2/qty/quantity-limit-list', { params })
export const getAdvQtyBySkusNew = data => b3request.post('/api/v2/qty/quantity-limit-list', data)
export const getCartAdvQtyCheckState = data => b3request.get(`/api/v2/qty/cartLimit/${data}`)
export const getShoppingLists = params => b3request.get('/api/v2/shoppinglists/lists', { params })
export const getVariantsByProductId = params => b3request.get('/api/v2/catalogs/variants', { params })
export const getShoppingListsInfo = params => b3request.get('/api/v2/shoppinglists', { params })
export const addProductToShoppingList = data => b3request.post('/api/v2/shoppinglists/items', data)
export const createShopingList = data => b3request.post('/api/v2/shoppinglists', data)
export const duplicateShopingList = params => b3request.post('/api/v2/shoppinglists/duplicate', params)
export const deleteShopingList = shoppingListId => b3request.delete(`/api/v2/shoppinglists/${shoppingListId}`)
export const getShoppingListItems = params => b3request.get('/api/v2/shoppinglists/items', { params })
export const updateShoppingList = data => b3request.put('/api/v2/shoppinglists', data)
export const checkAvailableProducts = params => b3request.get('/api/v2/catalog/products/availablity', { params })
export const deleteShopingListItme = (shoppingListId, itemId) => b3request.delete(`/api/v2/shoppinglists/${shoppingListId}/items/${itemId}`)
export const updateShoppingListItme = data => b3request.put('/api/v2/shoppinglists/items', data)
export const getCompanyList = (salesRepId, params) => b3request.get(`/api/v2/sales-reps/${salesRepId}/companies`, { params })
export const beginMasqueradeCompany = (companyId, customerId) => b3request.put(`/api/v2/sales-reps/${customerId}/companies/${companyId}/begin-masq`)
export const endMasqueradeCompany = (customerId, companyId) => b3request.put(`/api/v2/sales-reps/${customerId}/companies/${companyId}/end-masq`)
export const getOrderList = params => b3request.get('/api/v2/orders', { params })
export const getOrderListImage = params => b3request.get('/api/v2/orders/images', { params })
export const getOrderProducts = orderId => b3request.get(`/api/v2/orders/${orderId}/products`)
export const getOrderDetail = orderId => b3request.get(`/api/v2/orders/${orderId}/details`)
export const getCompanyBasicInfo = companyId => b3request.get(`/api/v2/companies/${companyId}/basic-info`)
export const initPage = customerId => b3request.get(`/api/v2/customers/${customerId}/companies`)
export const creatCompany = (bypassStoreHash, data) => b3request.post(`/api/v2/companies/${bypassStoreHash}`, data)
export const updateCompanyInfo = (companyId, data) => b3request.put(`/api/v2/companies/${companyId}/basic-info`, data)
export const initCompanyRegisterPage = customerId => b3request.get(`/api/v2/customers/${customerId}/companies`)
export const createCompany = data => b3request.post('/api/v2/frontend/companies', data)
export const getCompanyUser = (companyId, params) => b3request.get(`/api/v2/companies/${companyId}/users`, { params })
export const inspectCustomerEmail = (email, params) => b3request.get(`/api/v2/companies/validations/backend/user-emails/${email}`, { params })
export const saveNewUser = data => b3request.post('/api/v2/users', data)
export const updateUserInfo = (userId, data) => b3request.put(`/api/v2/users/${userId}`, data)
export const deleteUser = userId => b3request.delete(`/api/v2/users/${userId}`)
export const getSelerep = customerId => b3request.get(`/api/v2/sales-reps/${customerId}/companies/masquerading`)
export const getAddressBookBySearch = (companyId, data) => b3request.post(`/api/v2/companies/${companyId}/addresses/searches`, data)
export const getCountries = () => b3request.get('/api/v2/companies/addresses/countries')
export const createAddressBook = (companyId, data) => b3request.post(`/api/v2/companies/${companyId}/addresses`, data)
export const getAddressById = (companyId, addressId) => b3request.get(`/api/v2/companies/${companyId}/addresses/${addressId}`)
export const updateAddressBook = (companyId, addressId, data) => b3request.put(`/api/v2/companies/${companyId}/addresses/${addressId}`, data)
export const deleteAddressBook = (companyId, addressId, data) => b3request.put(`/api/v2/companies/${companyId}/addresses/${addressId}/activation`, data)
export const getDefaultAddressesByCompanyId = companyId => b3request.get(`/api/v2/companies/${companyId}/default-addresses`)
export const getAddressPermission = () => b3request.get('/api/v2/companies/addresses/permission')
export const getQuoteList = params => b3request.get('/api/v2/quotes', { params })
export const deleteQuoteList = quoteId => b3request.delete(`/api/v2/quotes/${quoteId}`)
export const quoteCheckout = quoteId => b3request.post(`/api/v2/quotes/${quoteId}/checkout`)
export const deleteCheckoutInfo = quoteId => b3request.delete(`/api/v2/quotes/${quoteId}/checkout`)
export const getDefaultAddresses = companyId => b3request.get(`/api/v2/quotes/info/store-company/${companyId}`)
export const createQuote = data => b3request.post('/api/v2/quotes', data)
export const getQuote = quoteId => b3request.get(`/api/v2/quotes/${quoteId}`)
export const getCompaniesQuotesStatus = () => b3request.get('/api/v2/companies/quotes/status')
export const sendEmail = data => b3request.post('/api/v2/emails/quotes', data)
export const getProductsBySkuQuick = params => b3request.get('/api/v2/catalogs/quick-order-pad', { params })
export const getProductsBySkuQuickByPost = data => b3request.post('/api/v2/catalogs/quick-order-pad', data)
export const getQuoteAdress = (companyId, params) => b3request.get(`/api/v2/companies/${companyId}/addresses/searches`, { params })
export const updateQuote = (quoteId, data) => b3request.put(`/api/v2/quotes/${quoteId}`, data)
export const exportPDF = (quoteId, currency) => b3request.post(`/api/v2/quotes/${quoteId}/pdf-export`, { currency })
export const getShoppingListItemsExtension = params => b3request.get('/api/v2/shoppinglists/items-extension', { params })
export const getOrderedList = params => b3request.get('/api/v2/ordered-products', { params })
export const uploadQuoteCSV = data => b3request.post('/api/v2/quotes/products/upload', data)
export const getOrderStatus = () => b3request.get('/api/v2/stores/order-statuses')
export const getExtraFields = params => b3request.get('/api/v2/companies/extra_fields/storefront', { params })
export const checkExistCompany = params => b3request.get('/api/v2/companies/existence', { params })
export const getCurrencies = () => b3request.get('/api/v2/stores/currencies')
export const getInventory = data => b3request.post('/api/v2/products/inventory', data)
export const createRfq = data => b3request.post('/api/v2/rfq', data)
export const detectUserEmailExist = params => b3request.get(`api/v2/users/validations/existence`, { params })
export const getQuoteConfig = params => b3request.get('/api/v2/rfq/configs', { params })
export const exportRfqPDF = (quoteId, params) => b3request.post(`api/v2/rfq/${quoteId}/pdf-export`, { params })
export const getUserInfo = (userId, params) => b3request.get(`/api/v2/backend/users/${userId}`, { params })
export const getRfqDetail = (quoteId, params) => b3request.get(`/api/v2/rfq/${quoteId}`, { params })
export const sendRfqMessage = (quoteId, params) => b3request.put(`/api/v2/rfq/${quoteId}`, { params })
export const CheckoutRfqQuote = (quoteId, params) => b3request.post(`/api/v2/quotes/${quoteId}/checkout`, { params })
